@model HomeCare_4_0.Models.HomeViewModel
@using HomeCare_4_0.ClassLib
@using HomeCare_4_0.Common
@{
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<style>
    .worksheet-item {
        padding-bottom: .5rem;
    }

    .worksheet-item:last-child {
        padding-bottom: 0rem;
    }

    .tag-label {
        position: relative;
        bottom: 4px;
    }

    .flag-china {
        position: relative;
        bottom: 4px;
        border-radius: 3px;
        height: 17.24px;
    }

    .a-span:hover {
        text-decoration: none;
    }

    .span-shadow:hover {
        box-shadow: 0.2px 0.2px 3px 3px rgba(0, 111, 206, 0.3);
    }

    .label-inconvenient {
        background-color: rgb(245, 115, 23) !important;
    }

    .btn-flag button {
        min-width: 80px;
    }

    .content .fa {
        font-size: 18px;
        margin-right: 5px;
    }
</style>

<div>
    @* แถบค้นหา *@
    <div class="row">
        <div class="col-xs-12">
            <div class="box" id="form-box">
                <div class="box-header with-border">
                    <a data-toggle="collapse" data-target="#search-panel-body">
                        <i class="fa fa-search"></i>
                        <h3 class="box-title">ค้นหาเพิ่มเติม</h3>
                    </a>
                </div>

                <div class="box-body collapse" id="search-panel-body">
                    <div class="row">
                        <div class="form-group col-xs-12 col-lg-4">
                            <label class="control-label">ประเภทใบรับเรื่อง</label>
                            <select class="col-lg-12 form-control" id="receiveJobCode" name="receiveJobCode"></select>
                        </div>
                        <div class="form-group col-xs-12 col-lg-4">
                            <label class="control-label">สถานะงาน</label>
                            <select class="col-lg-12 form-control" id="ddlReceiveMainProcessId" name="receiveJobCode"></select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-xs-12 col-lg-4">
                            <label class="control-label">วันรับเรื่อง</label><br />
                            <div class="input-group">
                                <div class="input-group-addon"><input type="checkbox" id="cbStartDate" onclick="toggleEnable('cbStartDate','informStartDate')"></div>
                                <input type="text" class="form-control datepicker" id="informStartDate" placeholder="วันเริ่มต้น" disabled>
                                <div class="input-group-addon"><input type="checkbox" id="cbEndDate" onclick="toggleEnable('cbEndDate','informEndDate')"></div>
                                <input type="text" class="form-control datepicker" id="informEndDate" placeholder="วันสุดท้าย" disabled>
                            </div>
                        </div>

                        <div class="form-group col-xs-12 col-lg-4">
                            <label class="control-label">ประเภทลูกค้า/งาน</label><br />
                            <div class="btn-group btn-group-justified" role="group">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-default" id="cbChina" onclick="toggleButton('cbChina')">ลูกค้าจีน</button>
                                </div>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-default" id="cbVip" onclick="toggleButton('cbVip')">V.I.P</button>
                                </div>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-default" id="cbUrgent" onclick="toggleButton('cbUrgent')">งานเร่งด่วน</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <hr class="col-xs-12" style="margin: 0;">
                        <div class="col-xs-12 col-lg-2" style="margin-top:10px;">
                            <div class="controls">
                                <button type="submit" class="btn btn-primary btn-block" id="btnSearchReceive" onclick="renderFilteredReceive()"><i class="fa fa-search" aria-hidden="true" style="font-size: 14px;"></i>ค้นหา</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">
            <div class="box" style="margin-bottom: 0;">
                <div class="box-header with-border">
                    <h3 class="box-title" id="sum-result"></h3>
                </div>

                <div class="box-body">
                    <div class="table-responsive" style="margin-bottom: 0;">
                        <table id="tbSearchDetail" class="table table-bordered table-striped" style="margin-bottom: 0;">
                            <thead>
                                <tr>
                                    <th class="text-center" style="width: 6%; padding-left: 0; padding-right: 0;">ลำดับที่</th>
                                    <th class="text-center" style="width: 45%;">ใบรับเรื่อง</th>
                                    <th class="text-center">ใบงาน</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    //Variable
    var baseUrl = '@System.Configuration.ConfigurationManager.AppSettings["Construction_API"]';

    window.onload = async function init() {
        await page.loading();
        // get main process id and bind it with dropdown
        ajaxGet(`${baseUrl}/homecare/api/v1/DropDown/ReceiveMainProcessId`, response => {
            if (response.data[0]) {
                response.data[0].description = "-- แสดงทั้งหมด --";
            }
            bindingDdlist('ddlReceiveMainProcessId', response.data, 0);
        });
        // binding receive type with dropdown
        bindingDdlist('receiveJobCode', [
            { id: 0, description: "-- แสดงทั้งหมด --" },
            { id: 1, description: "รายการแจ้งซ่อม (ในประกัน)" },
            { id: 2, description: "One Time Service" },
            { id: 3, description: "Yearly Service" }

        ], 0);
        // open panels
        $('#search-panel-body').collapse('toggle');
        // render filtered receives
        await renderFilteredReceive(false);
        await page.loaded();
        initailDatepicker();
    }

    async function renderFilteredReceive(showLoading = true) {
        if (showLoading) {
            await page.loading();
        }
        // prepare request body
        var body = {
            userId: @UserDetail.UserID,
            vendorId: ('@UserDetail.Role' == 'VENDOR') ? long.Parse(!string.IsNullOrEmpty('@UserDetail.VendorCode') ? '@UserDetail.VendorCode' : "0") : 0,
            mainProcessId: +$('#ddlReceiveMainProcessId').val() === 0 ? '@Model.HC_Main_Process' : +$('#ddlReceiveMainProcessId').val()
        };
        // call api to get search information by status
        await ajaxPost(`${baseUrl}/homecare/api/v1/Search/GetSearchInformationByStatus`, body, (response) => {
            if (response) {
                var counter = 0;
                // clear old result
                $("#tbSearchDetail tbody tr").remove();
                var receiveJobText = { text: "", index: 0};
                // loop by all receives
                $.each(response.data, function (index, item) {
                    // filter logic
                    if ($('#receiveJobCode').val() == "0" ||
                        ($('#receiveJobCode').val() == "1" && item.receiveJobCode == "R") ||
                        ($('#receiveJobCode').val() == "2" && item.receiveJobCode == "RA")||
                         ($('#receiveJobCode').val() == "3" && item.receiveJobCode == "RC") )  {
                        if (!$('#cbChina').val() || ($('#cbChina').val() == "check" && item.flagChina) || ($('#cbChina').val() == "uncheck" && !item.flagChina)) {
                            if (!$('#cbVip').val() || ($('#cbVip').val() == "check" && item.flagVIP) || ($('#cbVip').val() == "uncheck" && !item.flagVIP)) {
                                if (!$('#cbUrgent').val() || ($('#cbUrgent').val() == "check" && item.flagUrgent) || ($('#cbUrgent').val() == "uncheck" && !item.flagUrgent)) {
                                    if (checkRenderInformDate('cbEndDate', 'informEndDate', 'cbStartDate', 'informStartDate', item.informDate)) {
                                        if ($('#ddlReceiveMainProcessId').val() == "0" || $('#ddlReceiveMainProcessId').val() == item.receiveStatusId) {
                                            renderReceiveRow(index, item, receiveJobText);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if (item.receiveJobNoText != receiveJobText.text) {
                        receiveJobText.text = item.receiveJobNoText;
                        ++counter;
                    }
                });
                $('#sum-result').text(`พบรายการรับเรื่อง: ${receiveJobText.index} จากทั้งหมด ${counter} รายการ`);
            }
        });
        // hide loader
        if (showLoading) {
            await page.loaded();
        }
    }

    function renderReceiveRow(index, item, receiveJobText) {
        // has receive data
        if (item.receiveJobNoText != receiveJobText.text) {
            $("#tbSearchDetail tbody").append("<tr></tr>");
            $("#tbSearchDetail tbody tr:last").append(`<td class="text-center"><label name="lblNo" id="lblNo">${(++receiveJobText.index)}</label></td>`);

			// write data to column "ใบรับเรื่อง"
            var receiveUrl = `@Url.Action("ReceivedDetail", "Received")/${item.receiveId}`;
			if (item.receiveJobCode === 'RA') {
				receiveUrl = `@Url.Action("ReceivedRepair", "Received")/${item.receiveId}`;
            }
             if (item.receiveJobCode === 'RC') {
                  receiveUrl = `@Url.Action("ReceivedHomeCard", "Received")/${item.receiveId}`;
             }
            var statusComponents = item.receiveStatusText.split(' ');
            var unitCode = `<span class="label label-default tag-label">${statusComponents[0]}</span>`;
            statusComponents.shift();
            var statusText = statusComponents.join(' ');
            var receiveStatus = `<span class="label label-${statusText.includes('ครบ') ? 'success' : statusText.includes('เร่งด่วน') ? 'danger' : 'primary'} tag-label">${statusText.trim()}</span>`;
            var flagVip = '';
            if (item.flagVIP) {
                if (item.flagVipDesc.includes('Priority')) {
                    flagVip = `<span class="label label-danger tag-label">${item.flagVipDesc}</span>`
                }
                else {  
                    flagVip = `<span class="label label-warning tag-label">VIP</span>`
                }
            }
            var flagChina = item.flagChina ? `<img class="flag-china" src="https://s3-ap-southeast-1.amazonaws.com/sansiri-conss-ro77/www/public/images/flag-china.svg" alt="China flag">` : '';
            var receiveTags = `<div>${unitCode} ${receiveStatus} ${flagVip} ${flagChina}</div>`;
            var receiveStyle = '';
            if (item.receiveJobCode === 'RA') {
                receiveStyle = 'style="color: forestgreen;"';
            }
            $("#tbSearchDetail tbody tr:last").append(`<td class="text-left"><div class="worksheet-item"><div><a href="${receiveUrl}" ${receiveStyle}>${item.receiveJobNoText}</a> </div>${receiveTags}</div></td>`);

            // write data to column "ใบงาน"
            if (item.worksheetJobNoText != null && item.worksheetStatusText != null) {
                var worksheetUrl = `@Url.Action("WorksheetDetail", "Worksheet")/${item.worksheetId}`;
                if (item.worksheetJobCode === 'WA') {
                    worksheetUrl = `@Url.Action("WorksheetRepair", "Worksheet")/${item.worksheetId}`;
                }else if (item.worksheetJobCode === 'WC') {
                    worksheetUrl = `@Url.Action("WorkSheetYearly", "Worksheet")/${item.worksheetId}`;
               }
                var status = `<span class="label label-primary tag-label">${item.worksheetStatusText}</span>`;
                var approveStatus = `<span class="label label-info tag-label">${item.worksheetApproveStatusText}</span>`;
                var cost = item.cost ? `<span class="label label-default tag-label">${item.cost}</span>` : '';
                var questionnaire = item.questionnaireStatus == true ? `<a class="a-span" href="${worksheetUrl}"><span class="label label-success tag-label span-shadow">ประเมินแล้ว</span></a>` : item.questionnaireStatus == false ? `<a class="a-span" href="${worksheetUrl}"><span class="label label-danger tag-label span-shadow">ยังไม่ประเมิน</span></a>` : '';
				var inconvenient = item.evaluateCcContact ? `<span class="label tag-label label-inconvenient">${item.evaluateReasonDescriptionTh}</span>` : '';
                var tags = `<div>${status} ${approveStatus} ${cost} ${questionnaire} ${inconvenient}</div>`;
                var worksheetStyle = '';
                if (item.worksheetJobCode === 'WA') {
                    // change color by job type
                    var worksheetStyle = 'style="color: forestgreen;"';
                }
                $("#tbSearchDetail tbody tr:last").append(`<td class="text-left" id="ws-${item.receiveId}"><div class="worksheet-item"><div><a href="${worksheetUrl}" ${worksheetStyle}>${item.worksheetJobNoText}</a> </div>${tags}</div></td>`);
            } else {
                $("#tbSearchDetail tbody tr:last").append(`<td class="text-left" id="ws-${item.receiveId}"></td>`);
            }
        } else {
            // has only worksheet data
            if (item.worksheetJobNoText != null && item.worksheetStatusText != null) {
                var worksheetUrl = `@Url.Action("WorksheetDetail", "Worksheet")/${item.worksheetId}`;
                if (item.worksheetJobCode === 'WA') {
                    worksheetUrl = `@Url.Action("WorksheetRepair", "Worksheet")/${item.worksheetId}`;
                }else if (item.worksheetJobCode === 'WC') {
                    worksheetUrl = `@Url.Action("WorkSheetYearly", "Worksheet")/${item.worksheetId}`;
                }
                var status = `<span class="label label-primary tag-label">${item.worksheetStatusText}</span>`;
                var approveStatus = `<span class="label label-info tag-label">${item.worksheetApproveStatusText}</span>`;
                var cost = item.cost ? `<span class="label label-default tag-label">${item.cost}</span>` : '';
                var questionnaire = item.questionnaireStatus == true ? `<a class="a-span" href="${worksheetUrl}"><span class="label label-success tag-label span-shadow">ประเมินแล้ว</span></a>` : item.questionnaireStatus == false ? `<a class="a-span" href="${worksheetUrl}"><span class="label label-danger tag-label span-shadow">ยังไม่ประเมิน</span></a>` : '';
				var inconvenient = item.evaluateCcContact ? `<span class="label tag-label label-inconvenient">${item.evaluateReasonDescriptionTh}</span>` : '';
                var tags = `<div>${status} ${approveStatus} ${cost} ${questionnaire} ${inconvenient}</div>`;
                var worksheetStyle = '';
                if (item.worksheetJobCode === 'WA') {
                    // change color by job type
                    var worksheetStyle = 'style="color: forestgreen;"';
                }
                $(`#ws-${item.receiveId}`).append(`<div class="worksheet-item"><div><a href="${worksheetUrl}" ${worksheetStyle}>${item.worksheetJobNoText}</a> </div>${tags}`);
            }
        }
    }

    // Bind dropdown list
    function bindingDdlist(ddlId, ddlData, selectedVal) {
        $(`#${ddlId}`).empty();
        $.each(ddlData, (i, d) => {
            if (d.id == 0) {
                $(`#${ddlId}`).append(`<option value="${d.id}" selected style="color:gray;">${d.description}</option>`);
            } else if (selectedVal == d.id) {
                $(`#${ddlId}`).append(`<option value="${d.id}" selected>${d.description}</option>`);
            } else {
                $(`#${ddlId}`).append(`<option value="${d.id}" >${d.description}</option>`);
            }
        })
    }

    function toggleButton(buttonId) {
        if (!$(`#${buttonId}`).val()) {
            $(`#${buttonId}`).val("check");
            $(`#${buttonId}`).css({ 'background-color': '#428bca', 'color': '#eee' })
        } else if ($(`#${buttonId}`).val() == "check") {
            $(`#${buttonId}`).val("uncheck");
            $(`#${buttonId}`).css({ 'background-color': '#d9534f', 'color': '#eee' })
        } else {
            $(`#${buttonId}`).val("");
            $(`#${buttonId}`).css({ 'background-color': '', 'color': '' })
        }
    }

    function checkRenderInformDate(cbUpper, inputUpperId, cbLower, inputLowerId, informDate) {

        if ($(`#${cbLower}`).prop('checked')) {
            if (!isUnderInformDate(inputLowerId, informDate)) {
                return false
            }
        }
        if ($(`#${cbUpper}`).prop('checked')) {
            if (!isOverInformDate(inputUpperId, informDate)) {
                return false
            }
        }
        return true
    }

    //Upper bound
    function isOverInformDate(inputUpperId, informDate) {
        //inputId => informDate
        var inputUpper = $(`#${inputUpperId}`).val() ? new Date(reorganizeDateFormat($(`#${inputUpperId}`).val())) : new Date();
        var informDateFormat = new Date(informDate);

        if (((inputUpper - informDateFormat) / 8.64e+7) < (-1)) {
            return false;
        }
        return true;
    }

    //Lower bound
    function isUnderInformDate(inputLowerId, informDate) {
        //inputId <= informDate
        var inputLower = $(`#${inputLowerId}`).val() ? new Date(reorganizeDateFormat($(`#${inputLowerId}`).val())) : new Date(2000, 1);
        var informDateFormat = new Date(informDate);

        if (((inputLower - informDateFormat) / 8.64e+7) >= 0) {
            return false;
        }
        return true;
    }

    function initailDatepicker() {
        $('.datepicker').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy',
            todayHighlight: true
        });
    }

    function toggleEnable(cbId, inputId) {
        if ($(`#${cbId}`).prop('checked')) {
            $(`#${inputId}`).removeAttr('disabled');
        } else {
            $(`#${inputId}`).attr('disabled', 1);
        }
    }

    // Date format for post
    function reorganizeDateFormat(date) {
        if (!date) { return '' }
        var temp = date.split('/');
        var newDate = new Date(`${temp[2]}-${temp[1]}-${temp[0]}`);
        return newDate;
    }
</script>
