@model HomeCare_4_0.Models.HomeViewModel
@using HomeCare_4_0.Common
@using HomeCare_4_0.ClassLib;
@{
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
<style>
    .worksheet-item {
        padding-bottom: .5rem;
    }

    .homecard-control::before {
        content: "0";
        color: transparent;
    }

    .worksheet-item:last-child {
        padding-bottom: 0rem;
    }

    .tag-label {
        position: relative;
        bottom: 4px;
    }

    .flag-china {
        position: relative;
        bottom: 4px;
        border-radius: 3px;
        height: 17.24px;
    }

    .a-span:hover {
        text-decoration: none;
    }

    .span-shadow:hover {
        box-shadow: 0.2px 0.2px 3px 3px rgba(0, 111, 206, 0.3);
    }

    .label-inconvenient {
        background-color: rgb(245, 115, 23) !important;
    }

    .btn-flag button {
        min-width: 80px;
    }

    p.homecard-control span.label {
        display: inline-table;
        text-transform: uppercase;
        min-width: 80px;
        font-size: 90%;
    }

    .content .fa {
        font-size: 18px;
        margin-right: 5px;
    }

    .text-indianred {
        color: indianred;
    }

    .delete-row {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        height: 30px;
        width: 30px;
        cursor: pointer;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    #tbHomeCardOptionalPackage > tbody > tr > td > input.table-input-xs {
        width: 60px;
        margin: 0px 5px;
        text-align: right;
    }

    #tbHomeCardOptionalPackage > tbody > tr > td > input.chk-item-val, #tbHomeCardOptionalPackage > thead > tr > th > input.chk-item-all {
        margin: 0px 3px !important;
    }

    div.input-group-ddl-form {
        position: relative;
        display: flex;
    }

        div.input-group-ddl-form > select.form-control, div.input-group-ddl-form > input.form-control {
            border-radius: 0px;
        }

        div.input-group-ddl-form > select.form-control {
            width: auto;
        }

        div.input-group-ddl-form > input.form-control {
            width: 50px;
            text-align: right;
        }

        div.input-group-ddl-form > span.label-txt {
            width: 190px;
            margin: 6px 8px;
        }

    div.input-group-ddl-form2 {
        position: relative;
        display: flex;
    }

        div.input-group-ddl-form2 > div {
            position: relative;
            display: flex;
        }

            div.input-group-ddl-form2 > div > select.form-control, div.input-group-ddl-form2 > div > input.form-control {
                border-radius: 0px;
            }

            div.input-group-ddl-form2 > div > input.form-control {
                width: 50px;
                text-align: right;
            }

            div.input-group-ddl-form2 > div > span.label-txt {
                width: 190px;
                margin: 6px 8px;
            }
</style>
<div>
    @* ข้อมูลลูกค้า *@
    @*@if (@EnumConfiguration.Role.CallCentre.ToString() == @UserDetail.Role)
        {*@
    <div class="row" id="SearchInformationCallCenter">
        <div class="col-xs-12">
            @Html.Partial("SearchInformation_CallCenter", Model)
        </div>
    </div>
    @*}*@
    @* ข้อมูล homecard *@
    <div class="row" id="homecard-panel" style="display: none;">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-default" id="customer-homecard">
                    <div class="box-header with-border">
                        <a data-toggle="collapse" data-target="#customer-homecard-member">
                            <i class="fa fa-credit-card"></i>
                            <h3 class="box-title">HOME CARD MEMBER</h3>
                        </a>
                    </div>
                    <div class="box-body">
                        <div class="row" hidden>
                            <div class="col-xs-12">
                                <button class="btn btn-primary" id="homecard-btn"><i class="fa fa-credit-card" style="font-size: 14px;"></i>SIGN UP</button>
                            </div>
                        </div>
                    </div>
                    <div class="box-body collapse" id="customer-homecard-member">
                        <div class="table-responsive" style="margin-bottom: 20px;">
                            <table id="tbHomeCardRequest" class="table table-bordered table-striped" style="margin-bottom: 0;">
                                <thead>
                                    <tr>
                                        <th class="text-center" style="width: 6%; padding-left: 0; padding-right: 0;">ลำดับที่</th>
                                        <th class="text-center" style="width: 40%;">หมายเลขรายการ</th>
                                        <th class="text-center">สถานะ</th>
                                        <th class="text-center">เหตุผลที่ลูกค้าปฎิเสธ</th>
                                        <th class="text-center">วันที่ติดต่อ</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>

                        <div id="HomeCardDetail">
                            <div class="row box-body">
                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                    <label class="control-label">ประเภทบัตร</label>
                                    <!--<div class="form-control-static" id="homecard-name-panel"></div>-->
                                    <select class="form-control" id="ddlGoodsName" onchange="onChangeGoodsName()" style="width: auto"></select>
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                    <label class="control-label">อายุการใช้งาน</label>
                                    <div class="form-control-static homecard-control " id="homecard-warranty-panel"></div>
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                    <label class="control-label">บริการซ่อมแซม</label>
                                    <div class="form-control-static homecard-control" id="homecard-repair-times-panel"></div>
                                </div>
                            </div>
                            <div class="row box-body">
                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                    <label class="control-label">งานเก็บประกัน + ทาสี</label>
                                    <div class="form-control-static homecard-control" id="homecard-coloring-times-panel"></div>
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                    <label class="control-label">Home Check Up</label>
                                    <div class="form-control-static homecard-control" id="homecard-checkup-times-panel"></div>
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                    <label class="control-label">บริการงานฉุกเฉิน</label>
                                    <div class="form-control-static homecard-control" id="homecard-urgent-times-panel"></div>
                                </div>
                            </div>
                            <div class="row box-body">
                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                    <label class="control-label">บริการเสริม - ล้างเครื่องปรับอากาศ</label>
                                    <div class="form-control-static homecard-control" id="homecard-optional-pack-panel"></div>
                                </div>
                            </div>
                        </div>

                        <!--  Optional Package -->
                        <div id="HomeCard_SignUp_Package_BoxShow" class="row" style="display:none;">
                            <div class="form-group col-xs-12 col-sm-12 col-lg-12">
                                <div id="HomeCard_SignUp_Package_BoxShow" style="margin: 0 13px;">
                                    <label class="control-label">บริการเสริม :</label>
                                    <div id="div_inputgroup_hc_optionalpack_BoxShow" class="input-group-ddl-form">
                                        <select class="form-control" id="ddlHomeCardOptionalPackage_BoxShow" disabled></select>
                                        <input id="txthomecard_unitper_BoxShow" type="number" class="form-control" />
                                        <span id="txthomecard_unitprice_BoxShow" class="label-txt" style="margin: 6px 3px; width: 50px;"></span>
                                        <span id="txthomecard_unitprice_BoxShow_used" class="label-txt" style="color: crimson; margin: 6px 0px;"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /. Optional Package -->
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* แถบค้นหา *@
    <div class="row">
        <div class="col-xs-12">
            <div class="box" id="form-box">
                <div class="box-header with-border">
                    <a data-toggle="collapse" data-target="#search-panel-body">
                        <i class="fa fa-search"></i>
                        <h3 class="box-title">ค้นหาเพิ่มเติม</h3>
                    </a>
                </div>

                <div class="box-body collapse" id="search-panel-body">
                    <div class="row">
                        <div class="form-group col-xs-12 col-lg-4">
                            <label class="control-label">ประเภทใบรับเรื่อง</label>
                            <select class="col-lg-12 form-control" id="receiveJobCode" name="receiveJobCode"></select>
                        </div>
                        <div class="form-group col-xs-12 col-lg-4">
                            <label class="control-label">สถานะงาน</label>
                            <select class="col-lg-12 form-control" id="ddlReceiveMainProcessId" name="receiveJobCode"></select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-xs-12 col-lg-4">
                            <label class="control-label">วันรับเรื่อง</label><br />
                            <div class="input-group">
                                <div class="input-group-addon"><input type="checkbox" id="cbStartDate" onclick="toggleEnable('cbStartDate','informStartDate')"></div>
                                <input type="text" class="form-control datepicker" id="informStartDate" placeholder="วันเริ่มต้น" disabled>
                                <div class="input-group-addon"><input type="checkbox" id="cbEndDate" onclick="toggleEnable('cbEndDate','informEndDate')"></div>
                                <input type="text" class="form-control datepicker" id="informEndDate" placeholder="วันสุดท้าย" disabled>
                            </div>
                        </div>

                        <div class="form-group col-xs-12 col-lg-4">
                            <label class="control-label">ประเภทลูกค้า/งาน</label><br />
                            <div class="btn-group btn-group-justified" role="group">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-default" id="cbChina" onclick="toggleButton('cbChina')">ลูกค้าจีน</button>
                                </div>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-default" id="cbVip" onclick="toggleButton('cbVip')">V.I.P</button>
                                </div>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-default" id="cbUrgent" onclick="toggleButton('cbUrgent')">งานเร่งด่วน</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <hr class="col-xs-12" style="margin: 0;">
                        <div class="col-xs-12 col-lg-2" style="margin-top:10px;">
                            <div class="controls">
                                <button type="submit" class="btn btn-primary btn-block" id="btnSearchReceive" onclick="renderFilteredReceive()"><i class="fa fa-search" aria-hidden="true" style="font-size: 14px;"></i>ค้นหา</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* แถบผลการค้นหา *@
    <div class="row">
        <div class="col-xs-12">
            <div class="box" style="margin-bottom: 0;">
                <div class="box-header with-border">

                    @*<h3>*@

                    <div class="row">
                        <div class="col-xs-8 col-lg-8" style="margin-top:10px;">
                            <div class="row">
                                <div class="col-sm-12">
                                    <form class="float-sm-right">
                                        <div class="form-group">
                                            <div class="input-group">
                                                <label>จำนวนข้อมูลที่แสดง</label>&nbsp;
                                                <span><select id="ddlPaging" onchange="onPagingChange()" style="width: auto;height:30px;"></select></span>
                                                <span>
                                                    &nbsp;

                                                    <label id="sum-result"></label>
                                                </span>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <div class="col-xs-4 col-lg-4" style="margin-top:10px;">

                            </div>
                        </div>
                    </div>

                    <div class="box-body">
                        @* Role = CallCentre && ชื่อลูกค้า != null *@
                        @{bool ccRule = @EnumConfiguration.Role.CallCentre.ToString() == @UserDetail.Role && @Model.Data_Customer.FullName != null;}
                        @{bool itRule = @EnumConfiguration.Role.ADMIN.ToString() == @UserDetail.Role && @Model.Data_Customer.FullName != null;}
                        @* Role = PMR && เป็นแปลงของส่วนกลาง && unitId != 0 && username != 'siriPMR' *@
                        @{bool pmrRule = @EnumConfiguration.Role.PMR.ToString() == @UserDetail.Role && (@Model.Data_Unit.Unit_Address == "--" || @Model.Data_Unit.Unit_Address == "") && Model.UnitID != 0 && "siriPMR" != @UserDetail.CodeName;}
                        @*  ยกเลิก HC แจ้งว่าผิด 19.04.2021 - เพิ่มเปิดใบงาน OTS ให้ Role, HC, SM, Support, AdminHC 09.03.2021 *@
                        @*@{bool hcRule = @EnumConfiguration.Role.HC.ToString() == @UserDetail.Role && @Model.Data_Customer.FullName != null;}
                        @{bool smRule = @EnumConfiguration.Role.SM.ToString() == @UserDetail.Role && @Model.Data_Customer.FullName != null;}
                        @{bool supportRule = @EnumConfiguration.Role.SUPPORT_HC.ToString() == @UserDetail.Role && @Model.Data_Customer.FullName != null;}
                        @{bool admin_HCRule = @EnumConfiguration.Role.AdminHC.ToString() == @UserDetail.Role && @Model.Data_Customer.FullName != null;}*@

                        @if (ccRule || pmrRule || itRule)
                        {
                            <div class="row">
                                <div class="col-xs-12 col-lg-12">
                                    <div class="btn-group btn-group-justified" role="group">
                                        <div class="btn-group" role="group">
                                            <button id="btnAddInform" class="btn btn-primary" onclick="@("window.open('" + @Url.Action("InformAddDetail", "Inform") + "/" + Model.UnitID + "','_blank')"); ">
                                                <i class="ace-icon fa fa-plus hidden-xs hidden-sm hidden-md" style="font-size: 14px;"></i>
                                                <span class="hidden-xs hidden-sm hidden-md">เพิ่มรายการแจ้งซ่อม</span>
                                                <span class="hidden-lg">IWS</span>
                                            </button>
                                        </div>
                                        <div class="btn-group" role="group">
                                            <button id="btnAddInformRepair" class="btn btn-primary" onclick="@("window.open('" + @Url.Action("InformRepair", "Inform") + "/" + Model.UnitID + "','_blank')");">
                                                <i class="ace-icon fa fa-plus hidden-xs hidden-sm hidden-md" style="font-size: 14px;"></i>
                                                <span class="hidden-xs hidden-sm hidden-md">One Time Service</span>
                                                <span class="hidden-lg">OTS</span>
                                            </button>
                                        </div>
                                        @if (System.Configuration.ConfigurationManager.AppSettings["EnableHomeCard"] == "true")
                                        {
                                            <div class="btn-group" role="group">
                                                <button id="btnAddInformYearly" class="btn btn-primary" onclick="@("window.open('" + @Url.Action("InformYearly", "Inform") + "/" + Model.UnitID + "','_blank')");" disabled>
                                                    <i class="ace-icon fa fa-plus hidden-xs hidden-sm hidden-md" style="font-size: 14px;"></i>
                                                    <span class="hidden-xs hidden-sm hidden-md">Yearly Service</span>
                                                    <span class="hidden-lg">YLS</span>
                                                </button>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <hr class="col-xs-12" style="margin: 10px 0 10px 0;">
                            </div>
                        }
                        @*else if (hcRule || smRule || supportRule || admin_HCRule) 
                        {
                            <div class="row">
                                <div class="col-xs-12 col-lg-12">
                                    <div class="btn-group btn-group-justified" role="group">
                                        <div class="btn-group" role="group">
                                            <button id="btnAddInform" class="btn btn-primary" onclick="@("window.open('" + @Url.Action("InformAddDetail", "Inform") + "/" + Model.UnitID + "','_blank')");" disabled>
                                                <i class="ace-icon fa fa-plus hidden-xs hidden-sm hidden-md" style="font-size: 14px;"></i>
                                                <span class="hidden-xs hidden-sm hidden-md">เพิ่มรายการแจ้งซ่อม</span>
                                                <span class="hidden-lg">IWS</span>
                                            </button>
                                        </div>
                                        <div class="btn-group" role="group">
                                            <button id="btnAddInformRepair" class="btn btn-primary" onclick="@("window.open('" + @Url.Action("InformRepair", "Inform") + "/" + Model.UnitID + "','_blank')");">
                                                <i class="ace-icon fa fa-plus hidden-xs hidden-sm hidden-md" style="font-size: 14px;"></i>
                                                <span class="hidden-xs hidden-sm hidden-md">One Time Service</span>
                                                <span class="hidden-lg">OTS</span>
                                            </button>
                                        </div>
                                        @if (System.Configuration.ConfigurationManager.AppSettings["EnableHomeCard"] == "true")
                                        {
                                            <div class="btn-group" role="group">
                                                <button id="btnAddInformYearly" class="btn btn-primary" onclick="@("window.open('" + @Url.Action("InformYearly", "Inform") + "/" + Model.UnitID + "','_blank')");" disabled>
                                                    <i class="ace-icon fa fa-plus hidden-xs hidden-sm hidden-md" style="font-size: 14px;"></i>
                                                    <span class="hidden-xs hidden-sm hidden-md">Yearly Service</span>
                                                    <span class="hidden-lg">YLS</span>
                                                </button>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <hr class="col-xs-12" style="margin: 10px 0 10px 0;">
                            </div>
                        }*@

                        <div class="table-responsive" style="margin-bottom: 0;">
                            <table id="tbSearchDetail" class="table table-bordered table-striped" style="margin-bottom: 0;">
                                <thead>
                                    <tr>
                                        <th class="text-center" style="width: 6%; padding-left: 0; padding-right: 0;">#</th>
                                        <th class="text-center" style="width: 45%;">ใบรับเรื่อง</th>
                                        <th class="text-center">ใบงาน</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                            <ul id="pagingPanel" class="pagination">
                                <li id="prePage"><a href="javascript:my_function('pre');"> < ก่อนหน้า</a></li>
                                <li id="nextPage"><a href="javascript:my_function('next');">ถัดไป ></a></li>
                            </ul>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>

    @* Modal Alert Siri Piority *@
    @{Html.RenderPartial("_DisplaySiriPiority");}

    <script type="text/javascript">
        // declare variable
        var baseUrl = '@System.Configuration.ConfigurationManager.AppSettings["Construction_API"]';
        var basePath = '@System.Configuration.ConfigurationManager.AppSettings["BasePath"]';
        var homeCardType;
        var homeCardPrice;
        var unitCode;
        var notSellingReason;
        var homeCardRequestStatus = [];
        var HomeCardList;
        var lastGoods;
        var _getval_total = 0;
        var _getval_unitprice = 0;
        var dataReciveAll = [];
        var currPage = 1;
        var endrecord = 0;
        //var receiveJobText = { text: "", index: 0 };
        window.onload = async function init()
        {
            await page.loading();
            
            await ajaxGet(baseUrl + '/homecare/api/v1/User/@UserDetail.UserID/Permission', async function (response) {
                if (response) {
                    if (!response.data.length) {
                        $('#SearchInformationCallCenter').css('display', 'none');
                    } else if (!response.data.find(a => a.permissionDescription === 'SearchInformationCallCenter')) {
                        $('#SearchInformationCallCenter').css('display', 'none');
                    } else {
                        $('#SearchInformationCallCenter').css('display', 'block');
                        ajaxGet(`${baseUrl}/homecare/api/v1/Search/GetBulkDealUnit?unitIdParam=${@Model.UnitID}`, response => {
                           if (response.statusCode = 200) {
                               modalWaring('ระบบตรวจพบ โครงการ Bulk deal กำลังเปิดยูนิตสำหรับแจ้งซ่อม ' + response.data[0].refUnit);
                               var urlHostName = location.protocol + "//" + location.host + basePath;
                               setTimeout(function () { window.location.href = "" + urlHostName + "/Home/SearchInformation/" + response.data[0].refProjectId + "/" + response.data[0].refUnitId + ""; }, 7000);
                           }
                        });
                    }
                }
            });

            // show home card panel if the unitId exists & ไม่ใช่แปลงส่วนกลาง
            @{var homeCardConfig = System.Configuration.ConfigurationManager.AppSettings["EnableHomeCard"] == "true" ? "true" : "false";}

            if (@Model.UnitID > 0 && !('@Model.Data_Unit.Unit_Address' == "--" || '@Model.Data_Unit.Unit_Address' == "") && @homeCardConfig) {
                await renderHomeCardPanel();
                $('#homecard-panel').slideDown();

        }

        @*if ('@UserDetail.Role' === '@EnumConfiguration.Role.CallCentre')
        {
            ajaxGet(`${baseUrl}/homecare/api/v1/Search/GetBulkDealUnit?unitIdParam=${@Model.UnitID}`, response => {
                if (response.statusCode = 200) {
                    modalWaring('ระบบตรวจพบ โครงการ Bulk deal กำลังเปิดยูนิตสำหรับแจ้งซ่อม ' + response.data[0].refUnit);
                    var urlHostName = location.protocol + "//" + location.host + basePath;
                    setTimeout(function () { window.location.href = "" + urlHostName + "/Home/SearchInformation/" + response.data[0].refProjectId + "/" + response.data[0].refUnitId + ""; }, 7000);
                }
            });
        }*@

            // get main process id and bind it with dropdown
            ajaxGet(`${baseUrl}/homecare/api/v1/DropDown/ReceiveMainProcessId`, response => {
                if (response.data[0]) {
                    response.data[0].description = "-- แสดงทั้งหมด --";
                }
                bindingDdlist('ddlReceiveMainProcessId', response.data, 0);
            });
        // binding receive type with dropdown
        bindingDdlist('receiveJobCode', [
            { id: 0, description: "-- แสดงทั้งหมด --" },
            { id: 1, description: "รายการแจ้งซ่อม (ในประกัน)" },
            { id: 2, description: "One Time Service" },
            { id: 3, description: "Yearly Service" }
        ], 0);
        // check project config for one time service button
        ajaxGet(`${baseUrl}/homecare/api/v1/Project/IsVisible/${@Model.ProjectID}`, response => {
            if (!response.data) {
                $('#btnAddInformRepair').parent().remove();
                $('#btnAddInformYearly').parent().remove();
            }
        });
        // open panels
        $('#Received-customer-detail').collapse('toggle');
        $('#customer-homecard-member').collapse('toggle');
        $('#search-panel-body').collapse('toggle');
        // render filtered receives

        await renderFilteredReceive(false);
        if (unitCode !== undefined) {

            await GetHomeCardMemberPanel();

        }
        await page.loaded();
        initailDatepicker();



        $(`#ddlPaging`).append(`<option value="${10}" >${10}</option>`);
        $(`#ddlPaging`).append(`<option value="${20}" >${20}</option>`);
        $(`#ddlPaging`).append(`<option value="${50}" >${50}</option>`);
        $(`#ddlPaging`).append(`<option value="${100}" >${100}</option>`);
        $(`#ddlPaging`).append(`<option value="${1000}" >${1000}</option>`);
        $(`#ddlPaging`).append(`<option value="${2000}" >${2000}</option>`);

            if ($("#hdVipStatus").val() != null) {
                if ($("#hdVipStatus").val() != "priority") {
                    $('#modalDisplaySiriPiority').modal('show');
                }
            }

    }
    async function onChangeGoodsName() {
        var temp = HomeCardList.filter(h => h.homeCardId == $('#ddlGoodsName').val());
        await GetHomeCardMemberPanel(temp[0].homeCardId);
    }

    async function GetHomeCardMemberPanel(homeCardId = null) {
        //remaining Time
        var repairTimes;
        var warrantyAndColoringTimes;
        var checkupTimes;
        var urgentTimes;
        var homeCardName;
        var homeCardTypeId;
        var startDate;
        var expireDate;
        var dateOne;
        var dateTwo;
        var optionPackageTimes;

        var response = await get(baseUrl + '/homecare/api/v1/HomeCard/' + unitCode + '/Member');
        if (!response || response.length == 0) {
            $('#HomeCardDetail').hide();
            return false;
        }
        HomeCardList = response;
        if (HomeCardList.length > 0) {

            if (homeCardId) {
                lastGoods = HomeCardList.filter(h => h.homeCardId == homeCardId)[0];
            } else {
                lastGoods = HomeCardList[HomeCardList.length - 1];
                var tempList = [];
                for (var i = 0; i < HomeCardList.length; i++)
                {
                    if (checkActiveHomeCardMember(HomeCardList[i]))
                    {
                        tempList.push({ id: HomeCardList[i].homeCardId, description: HomeCardList[i].homeCardName });
                    }
                    else if (HomeCardList.length === 1)
                    {
                        tempList.push({ id: HomeCardList[i].homeCardId, description: HomeCardList[i].homeCardName });
                    } 
                    else
                    {
                        if (tempList.length == 0 && HomeCardList[i] == HomeCardList[HomeCardList.length - 1])
                        {
                            tempList.push({ id: HomeCardList[i].homeCardId, description: HomeCardList[i].homeCardName });
                        }
                    }
                }

                if (tempList.length > 0) {
                    bindingDdlist('ddlGoodsName', tempList, tempList[tempList.length - 1].id);
                    $('#ddlGoodsName option:last').text(tempList[tempList.length - 1].description + ' (ล่าสุด)');
                    $('#ddlGoodsName option:last').css('color', 'green');
                }
            }
        }

        repairTimes = lastGoods.repairTimes;
        warrantyAndColoringTimes = lastGoods.warrantyAndColoringTimes;
        checkupTimes = lastGoods.checkupTimes;
        urgentTimes = lastGoods.urgentTimes;
        homeCardTypeId = lastGoods.homeCardTypeId;
        homeCardName = lastGoods.homeCardName;
        optionPackageTimes = lastGoods.extraPackageTimesUsed ? lastGoods.extraPackageTimesUsed : 0;
        startDate = thaiFormatDate(lastGoods.startDate, false);
        expireDate = thaiFormatDate(lastGoods.expireDate, false);
        dateOne = new Date();
        dateTwo = new Date(lastGoods.expireDate);

        var repairTimesMax;
        var warrantyAndColoringTimesMax;
        var checkupTimesMax;
        var urgentTimesMax;
        var HomeCardTypeMax;
        var optionPackageTimesMax;
        var response2 = await ajaxGet(baseUrl + '/homecare/api/v1/DropDown/HomeCardType');

        if (homeCardTypeId)
        {
            HomeCardTypeMax = response2.data.find(a => a.id === homeCardTypeId);
            repairTimesMax = HomeCardTypeMax.repairTimes;
            warrantyAndColoringTimesMax = HomeCardTypeMax.warrantyAndColoringTimes;
            checkupTimesMax = HomeCardTypeMax.checkupTimes;
            urgentTimesMax = HomeCardTypeMax.urgentTimes;
            extraPackageTimesMax = lastGoods.extraPackageTimesMax ? lastGoods.extraPackageTimesMax : 0;
            $('#homecard-repair-times-panel').text(`(${repairTimes}/${repairTimesMax}) (เหลือ/ทั้งหมด)`);
            $('#homecard-coloring-times-panel').text(`(${warrantyAndColoringTimes}/${warrantyAndColoringTimesMax}) (เหลือ/ทั้งหมด)`);
            $('#homecard-checkup-times-panel').text(`(${checkupTimes}/${checkupTimesMax}) (เหลือ/ทั้งหมด)`);
            $('#homecard-urgent-times-panel').text(`(${urgentTimes}/${urgentTimesMax}) (เหลือ/ทั้งหมด)`);
            $('#homecard-optional-pack-panel').text(`(${optionPackageTimes}/${extraPackageTimesMax}) (เหลือ/ทั้งหมด)`);
            $("#homecard-name-panel").text(`<i class="fa fa-credit-card text-blue"></i><span class=text-blue >${homeCardName}</span>`);
            $("#homecard-warranty-panel").text(`${startDate}-${expireDate}   (1ปี)`);
            var blueText = "#008CBA";
            var redText = "crimson";
            $('#homecard-repair-times-panel').css('color', `${repairTimes > 0 ? blueText : redText}`);
            $('#homecard-coloring-times-panel').css('color', `${warrantyAndColoringTimes > 0 ? blueText : redText}`);
            $('#homecard-checkup-times-panel').css('color', `${checkupTimes > 0 ? blueText : redText}`);
            $('#homecard-urgent-times-panel').css('color', `${urgentTimes > 0 ? blueText : redText}`);
            $('#homecard-optional-pack-panel').css('color', `${optionPackageTimes > 0 ? blueText : redText}`);
            $("#homecard-warranty-panel").css('color', `${dateOne >= dateTwo ? redText : blueText}`);

            await  CheckHomeCardMember(repairTimes, warrantyAndColoringTimes, checkupTimes, urgentTimes, optionPackageTimes); //Check Member
        }

    }

            function checkActiveHomeCardMember(homeCardObj)
            {
                if (moment() > moment(homeCardObj.expireDate))
                {
                    return false;
                }

                if (homeCardObj.repairTimes <= 0
                    && homeCardObj.warrantyAndColoringTimes <= 0
                    && homeCardObj.urgentTimes <= 0
                    && homeCardObj.checkupTimes <= 0
                    && homeCardObj.extraPackageTimesUsed <= 0)
                {
                    return false;
                }

                return true;
            }

            async function CheckHomeCardMember(repairTimes,warrantyAndColoringTimes,checkupTimes,urgentTimes,extraPackageTimesUsed) {
                var lastGoods;
                var expireDate;
                var dateOne;
                var dateTwo;
                var response = await get(baseUrl + '/homecare/api/v1/HomeCard/' + unitCode + '/Member');
                if (!response || response.length == 0) {
                    return false;
                }
                lastGoods = response[response.length - 1]    //get last Member Card
                if (lastGoods) {

                    expireDate = lastGoods.expireDate;
                    dateOne = new Date(); //now
                    dateTwo = new Date(expireDate);

                }
                if (lastGoods.homeCardName != "" || lastGoods.homeCardName != null)
                {
                    if (dateOne < dateTwo) { // not expire
                        var monthDiff = moment(dateTwo).diff(moment(dateOne), 'months', true);

                        if ((monthDiff <= 3))
                        {
                            $('#homecard-btn').removeAttr('disabled');
                            //Edit by Adisorn 18/12/2020 เกิน 3 เดือนไม่เกี่ยวกับการเปิดใบรับเรื่อง ฉะนั้น ต้องมาเช็คว่า ใบรับเรื่องนี้ เปิดใบงานครบตาม โค้วต้าหรือยัง
                            if (repairTimes !== 0 || warrantyAndColoringTimes !== 0 || checkupTimes !== 0 || urgentTimes !== 0)
                            {
                                $('#btnAddInformYearly').removeAttr('disabled');
                            }
                        }
                        else if (repairTimes !== 0 || warrantyAndColoringTimes !== 0 || checkupTimes !== 0 || urgentTimes !== 0 || extraPackageTimesUsed !== 0)
                        {
                            $('#btnAddInformYearly').removeAttr('disabled');
                            $("#homecard-btn").attr('disabled', 1); //disable ปุ่ม
                        }

                    }
                    else if (dateOne >= dateTwo) { //expire
                        $('#homecard-btn').removeAttr('disabled');

                        if (repairTimes == 0 && warrantyAndColoringTimes == 0 && checkupTimes == 0 && urgentTimes == 0)
                        {
                            $('#homecard-btn').removeAttr('disabled');
                        }

                    }

                }
                else if(lastGoods.homeCardName == "" || lastGoods.homeCardName == null){
                    $('#HomeCardDetail').hide();
                }

            }

            async function renderFilteredReceive(showLoading = true) {
                if (showLoading) {
                    await page.loading();
                }
                $(`#ddlPaging`).val(10);
                currPage = 1;
                var perpage = 10;
                var start = 1;
                var endrecord = (currPage * perpage);
                var index = 0;
                var item = []
                //page.loading();
                var table = $('#tbSearchDetail').DataTable();
                table.destroy();
                // prepare request body
                var body = {
                    userId: @UserDetail.UserID,
                    vendorId: '@UserDetail.Role' == 'VENDOR' ? parseInt('@UserDetail.VendorCode') : 0,
                    unitId: @Model.UnitID,
                    projectId:  @Model.ProjectID,
                };
                var counter = 0;
                var counterx = 0;
                // call api to get search information
                await ajaxPost(`${baseUrl}/homecare/api/v1/Search/GetSearchInformation`, body, (response) => {
                    if (response) {

                        $("#tbSearchDetail tbody tr").remove();
                        var receiveJobText = { text: "", index: 0 };
                        dataReciveAll = response.data
                        $.each(dataReciveAll, function (index, item) {

                            // filter logic
                            if ($('#receiveJobCode').val() == "0" ||
                                ($('#receiveJobCode').val() == "1" && item.receiveJobCode == "R") ||
                                ($('#receiveJobCode').val() == "2" && item.receiveJobCode == "RA") ||
                                ($('#receiveJobCode').val() == "3" && item.receiveJobCode == "RC")) {
                                if (!$('#cbChina').val() || ($('#cbChina').val() == "check" && item.flagChina) || ($('#cbChina').val() == "uncheck" && !item.flagChina)) {
                                    if (!$('#cbVip').val() || ($('#cbVip').val() == "check" && item.flagVIP) || ($('#cbVip').val() == "uncheck" && !item.flagVIP)) {
                                        if (!$('#cbUrgent').val() || ($('#cbUrgent').val() == "check" && item.flagUrgent) || ($('#cbUrgent').val() == "uncheck" && !item.flagUrgent)) {
                                            if (checkRenderInformDate('cbEndDate', 'informEndDate', 'cbStartDate', 'informStartDate', item.informDate)) {
                                                if ($('#ddlReceiveMainProcessId').val() == "0" || $('#ddlReceiveMainProcessId').val() == item.receiveStatusId) {
                                                     //counter = receiveJobText.index
                                                    if (receiveJobText.index >= start - 1 && receiveJobText.index <= endrecord - 1) {
                                                        renderReceiveRow(index, item, receiveJobText);
                                                        //counterx++;
                                                    }
                                                    else {
                                                        if (item.receiveJobNoText != receiveJobText.text) {
                                                            ++receiveJobText.index
                                                            //counterx++;
                                                        }

                                                    }

                                                    counterx = receiveJobText.index;

                                                }
                                                else {
                                                    console.log(item.receiveId);
                                                    counter = receiveJobText.index
                                                }
                                            }
                                            else {
                                                console.log(item.receiveId);
                                            }
                                        }
                                    }
                                }
                                else {

                                    console.log(item.receiveId);
                                }
                            }
                            else {

                                console.log(item.receiveId);
                            }
                            if (item.receiveJobNoText != receiveJobText.text) {
                                receiveJobText.text = item.receiveJobNoText;
                                ++counter;
                            }
                            else {
                                console.log(item.receiveId);
                            }
                        });
                        //$('#sum-result').text(`พบรายการรับเรื่อง ${receiveJobText.index} จากทั้งหมด ${counter} รายการ`);
                        $('#sum-result').text(`จากทั้งหมด ${counter} รายการ`);
                        if (counterx <= 10) {

                            $("#pagingPanel").removeClass("pagination");
                            $("#pagingPanel").addClass("hide");
                        }
                    }
                });
                $('#sum-result').text(`รายการ/หน้า จากทั้งหมด ${counterx} รายการ`);
                if (counterx <= 10) {
                    $("#pagingPanel").removeClass("pagination");
                    $("#pagingPanel").addClass("hide");
                }
                else {
                    $("#pagingPanel").removeClass("hide");
                    $("#pagingPanel").addClass("pagination");

                }

                // hide loader
                if (showLoading) {
                    await page.loaded();
                }
            }
                // Date format for display
                function thaiFormatDate(date, withTime = true) {
                    if (!date) { return '' }
                    date = UTCToLocal(date);
                    var [y, m, d] = date.split('T')[0].split('-');
                    var [t, z] = date.split('T')[1].split('.');
                    var result = d + "/" + m + "/" + y + ` ${withTime ? t : ''}`;
                    return result.trim() ;
                }
                    function UTCToLocal(date) {
                        var localeDate = new Date(date);
                        return date = new Date(localeDate.setHours(localeDate.getHours() + 7)).toJSON();
                    }
                    function thaiTimeInUTC(date) {
                        return new Date(date.setHours(date.getHours() + date.getTimezoneOffset() / 60 + 7));
                    }
                    function renderReceiveRow(index, item, receiveJobText) {
                        // has receive data
                        if (item.receiveJobNoText != receiveJobText.text) {
                            $("#tbSearchDetail tbody").append("<tr></tr>");
                            $("#tbSearchDetail tbody tr:last").append(`<td class="text-center"><label name="lblNo" id="lblNo">${(++receiveJobText.index)}</label></td>`);
                            // write data to column "ใบรับเรื่อง"
                            var receiveUrl = `@Url.Action("ReceivedDetail", "Received")/${item.receiveId}`;
                            if (item.receiveJobCode === 'RA') {
                                receiveUrl = `@Url.Action("ReceivedRepair", "Received")/${item.receiveId}`;
                            }
                            if (item.receiveJobCode === 'RC') {
                                receiveUrl = `@Url.Action("ReceivedHomeCard", "Received")/${item.receiveId}`;
                            }
                            var statusComponents = item.receiveStatusText.split(' ');
                            var unitCode = `<span class="label label-default tag-label">${statusComponents[0]}</span>`;
                            statusComponents.shift();
                            var statusText = statusComponents.join(' ');
                            var receiveStatus = `<span class="label label-${statusText.includes('ครบ') ? 'success' : statusText.includes('เร่งด่วน') ? 'danger' : 'primary'} tag-label">${statusText.trim()}</span>`;
                            var flagVip = '';
                            if (item.flagVIP) {
                                if (item.flagVipDesc.includes('Priority')) {
                                    flagVip = `<span class="label label-danger tag-label">${item.flagVipDesc}</span>`
                                }
                                else {
                                    flagVip = `<span class="label label-warning tag-label">VIP</span>`
                                }
                            }
                            var flagChina = item.flagChina ? `<img class="flag-china" src="https://s3-ap-southeast-1.amazonaws.com/sansiri-conss-ro77/www/public/images/flag-china.svg" alt="China flag">` : '';
                            var receiveTags = `<div>${unitCode} ${receiveStatus} ${flagVip} ${flagChina}</div>`;
                            var receiveStyle = '';
                            if (item.receiveJobCode === 'RA' || item.receiveJobCode === 'RC') {
                                receiveStyle = 'style="color: forestgreen;"';
                            }
                            $("#tbSearchDetail tbody tr:last").append(`<td class="text-left"><div class="worksheet-item"><div><a href="${receiveUrl}" ${receiveStyle}>${item.receiveJobNoText}</a> </div>${receiveTags}</div></td>`);
                            // write data to column "ใบงาน"
                            if (item.worksheetJobNoText != null && item.worksheetStatusText != null) {
                                var worksheetUrl = `@Url.Action("WorksheetDetail", "Worksheet")/${item.worksheetId}`;
                                if (item.worksheetJobCode === 'WA') {
                                    worksheetUrl = `@Url.Action("WorksheetRepair", "Worksheet")/${item.worksheetId}`;
                                } else if (item.worksheetJobCode === 'WC') {
                                    worksheetUrl = `@Url.Action("WorkSheetYearly", "Worksheet")/${item.worksheetId}`;
                                }
                                var status = `<span class="label label-primary tag-label">${item.worksheetStatusText}</span>`;
                                var approveStatus = `<span class="label label-info tag-label">${item.worksheetApproveStatusText}</span>`;
                                var cost = item.cost ? `<span class="label label-default tag-label">${item.cost}</span>` : '';
                                var questionnaire = item.questionnaireStatus == true ? `<a class="a-span" href="${worksheetUrl}"><span class="label label-success tag-label span-shadow">ประเมินแล้ว</span></a>` : item.questionnaireStatus == false ? `<a class="a-span" href="${worksheetUrl}"><span class="label label-danger tag-label span-shadow">ยังไม่ประเมิน</span></a>` : '';
                                var inconvenient = item.evaluateCcContact ? `<span class="label tag-label label-inconvenient">${item.evaluateReasonDescriptionTh}</span>` : '';
                                var tags = `<div>${status} ${approveStatus} ${cost} ${questionnaire} ${inconvenient}</div>`;
                                var worksheetStyle = '';
                                if (item.worksheetJobCode === 'WA' || item.worksheetJobCode === 'WC') {
                                    // change color by job type
                                    var worksheetStyle = 'style="color: forestgreen;"';
                                }
                                $("#tbSearchDetail tbody tr:last").append(`<td class="text-left" id="ws-${item.receiveId}"><div class="worksheet-item"><div><a href="${worksheetUrl}" ${worksheetStyle}>${item.worksheetJobNoText}</a> </div>${tags}</div></td>`);
                            } else {
                                $("#tbSearchDetail tbody tr:last").append(`<td class="text-left" id="ws-${item.receiveId}"></td>`);
                            }
                        } else {
                            // has only worksheet data
                            if (item.worksheetJobNoText != null && item.worksheetStatusText != null) {
                                var worksheetUrl = `@Url.Action("WorksheetDetail", "Worksheet")/${item.worksheetId}`;
                                if (item.worksheetJobCode === 'WA') {
                                    worksheetUrl = `@Url.Action("WorksheetRepair", "Worksheet")/${item.worksheetId}`;
                                } else if (item.worksheetJobCode === 'WC') {
                                    worksheetUrl = `@Url.Action("WorkSheetYearly", "Worksheet")/${item.worksheetId}`;
                                }
                                var status = `<span class="label label-primary tag-label">${item.worksheetStatusText}</span>`;
                                var approveStatus = `<span class="label label-info tag-label">${item.worksheetApproveStatusText}</span>`;
                                var cost = item.cost ? `<span class="label label-default tag-label">${item.cost}</span>` : '';
                                var questionnaire = item.questionnaireStatus == true ? `<a class="a-span" href="${worksheetUrl}"><span class="label label-success tag-label span-shadow">ประเมินแล้ว</span></a>` : item.questionnaireStatus == false ? `<a class="a-span" href="${worksheetUrl}"><span class="label label-danger tag-label span-shadow">ยังไม่ประเมิน</span></a>` : '';
                                var inconvenient = item.evaluateCcContact ? `<span class="label tag-label label-inconvenient">${item.evaluateReasonDescriptionTh}</span>` : '';
                                var tags = `<div>${status} ${approveStatus} ${cost} ${questionnaire} ${inconvenient}</div>`;
                                var worksheetStyle = '';
                                if (item.worksheetJobCode === 'WA' || item.worksheetJobCode === 'WC') {
                                    // change color by job type
                                    var worksheetStyle = 'style="color: forestgreen;"';
                                }
                                $(`#ws-${item.receiveId}`).append(`<div class="worksheet-item"><div><a href="${worksheetUrl}" ${worksheetStyle}>${item.worksheetJobNoText}</a> </div>${tags}`);
                                endrecord = endrecord + 1;
                            }

                        }
                    }

                    // bind dropdown list
                    function bindingDdlist(ddlId, ddlData, selectedVal) {
                        $(`#${ddlId}`).empty();
                        $.each(ddlData, (i, d) => {
                            if (d.id == 0) {
                                $(`#${ddlId}`).append(`<option value="${d.id}" selected style="color:gray;">${d.description}</option>`);
                            } else if (selectedVal == d.id) {
                                $(`#${ddlId}`).append(`<option value="${d.id}" selected>${d.description}</option>`);
                            } else {
                                $(`#${ddlId}`).append(`<option value="${d.id}" >${d.description}</option>`);
                            }
                        })
                    }

                    // toggle button
                    function toggleButton(buttonId) {
                        if (!$(`#${buttonId}`).val()) {
                            $(`#${buttonId}`).val("check");
                            $(`#${buttonId}`).css({ 'background-color': '#428bca', 'color': '#eee' })
                        } else if ($(`#${buttonId}`).val() == "check"){
                            $(`#${buttonId}`).val("uncheck");
                            $(`#${buttonId}`).css({ 'background-color': '#d9534f', 'color': '#eee' })
                        } else {
                            $(`#${buttonId}`).val("");
                            $(`#${buttonId}`).css({ 'background-color': '', 'color': '' })
                        }
                    }

                    // check inform date
                    function checkRenderInformDate(cbUpper, inputUpperId, cbLower, inputLowerId, informDate) {
                        if ($(`#${cbLower}`).prop('checked')) {
                            if (!isUnderInformDate(inputLowerId, informDate)) {
                                return false
                            }
                        }
                        if ($(`#${cbUpper}`).prop('checked')) {
                            if (!isOverInformDate(inputUpperId, informDate)) {
                                return false
                            }
                        }
                        return true
                    }

                    // upper bound
                    function isOverInformDate(inputUpperId, informDate) {
                        // inputId >= informDate
                        var inputUpper = $(`#${inputUpperId}`).val() ? new Date(reorganizeDateFormat($(`#${inputUpperId}`).val())) : new Date();
                        var informDateFormat = new Date(informDate);

                        if (((inputUpper - informDateFormat) / 8.64e+7) < (-1)) {
                            return false;
                        }
                        return true;
                    }

                    // lower bound
                    function isUnderInformDate(inputLowerId, informDate) {
                        // inputId <= informDate
                        var inputLower = $(`#${inputLowerId}`).val() ? new Date(reorganizeDateFormat($(`#${inputLowerId}`).val())) : new Date(2000, 1);
                        var informDateFormat = new Date(informDate);

                        if (((inputLower - informDateFormat) / 8.64e+7) >= 0) {
                            return false;
                        }
                        return true;
                    }

                    function initailDatepicker() {
                        $('.datepicker').datepicker({
                            autoclose: true,
                            format: 'dd/mm/yyyy',
                            todayHighlight: true
                        });
                    }

                    function toggleEnable(cbId, inputId) {
                        if ($(`#${cbId}`).prop('checked')) {
                            $(`#${inputId}`).removeAttr('disabled');
                        } else {
                            $(`#${inputId}`).attr('disabled',1);
                        }
                    }

                    // Date format for post
                    function reorganizeDateFormat(date) {
                        if (!date) { return '' }
                        var temp = date.split('/');
                        var newDate = new Date(`${temp[2]}-${temp[1]}-${temp[0]}`);
                        return newDate;
                    }

                    async function renderHomeCardPanel() {
                        // get homecard data
                        homeCardType = await get(baseUrl + '/homecare/api/v1/DropDown/HomeCardType');
                        notSellingReason = await get(baseUrl + '/homecare/api/v1/DropDown/CustomerCancelQuotationReason');
                        notSellingReason = notSellingReason.filter(r => r.system === 'YLS' && !r.role);

                        var customer = await get(baseUrl + `/homecare/api/v1/Customer/@Model.UnitID`);

                        homeCardPrice = await get(baseUrl + `/homecare/api/v1/HomeCard/${customer.unitCode}/Price`);
                        var homeCardRequest = await get(baseUrl + `/homecare/api/v1/HomeCard/${customer.unitCode}/Request`);
                        unitCode = customer.unitCode;
                        $('#customer-homecard .homecard-row').remove();

                        // add homeCardRequest to table
                        var $tbHomeCardRequest = $('#tbHomeCardRequest > tbody');
                        var homeCardRequests = '';
                        if (homeCardRequest) {
                            for (let i = 0; i < homeCardRequest.length; i++) {
                                var request = homeCardRequest[i];
                                var tableNo = i + 1;
                                var colorLink = '';
                                var status = '';
                                var statusId = request.requestStatusId;
                                var statusDesc = request.requestStatusDesc;
                                var reason = request.notSellingReason;
                                var createdAt = thaiFormatDate(request.createdAt, false);
                                var notSellingReasonId = request.notSellingReasonId;
                                var isActive = request.isActive;

                                if(!isActive)
                                {
                                    status = `<span class="label label-danger tag-label span-shadow">${statusDesc}</span>`;
                                    colorLink = '#dd4b39'; //red
                                }
                                else
                                {
                                    if (statusId && !reason)
                                    {
                                        if (statusId === 1)
                                        {
                                            status = `<span class="label label-primary tag-label span-shadow">${statusDesc}</span>`;
                                            colorLink = '#3c8dbc'; //blue
                                        }
                                        else if (statusId === 2)
                                        {
                                            status = `<span class="label label-success tag-label span-shadow">${statusDesc}</span>`;
                                            colorLink = 'forestgreen';
                                        }
                                        else
                                        {
                                            status = `<span class="label label-danger tag-label span-shadow">${statusDesc}</span>`;
                                            colorLink = '#dd4b39'; //red
                                        }
                                    }
                                    else
                                    {
                                        status = '';
                                        colorLink = '##b9b9b9'; //gray
                                    }
                                }


                                var name = '';

                                if(notSellingReasonId && reason)
                                {
                                    name = `<a style='color: #b9b9b9' href='javascript:void(0)'><i class="fa fa-credit-card" style="font-size: 14px;"></i>${request.requestName}</a>`;
                                }
                                else
                                {
                                    name = `<a style='color: ${colorLink}' href="@Url.Action("Member", "HomeCard")?token=${randomString(192)}&prospectId=${customer.prospectId}&unitId=${customer.unitId}&unitCode=${customer.unitCode}&projectCode=${customer.projectCode}&homeCardRequestId=${request.id}"><i class="fa fa-credit-card" style="font-size: 14px;"></i>${request.requestName}</a>`;
                                }

                                homeCardRequests += `
                    <tr>
                        <td style='text-align: center;'>${tableNo}</td>
                        <td>${name}</td>
                        <td>${status}</td>
                        <td>${reason}</td>
                        <td style='text-align: center;'>${createdAt}</td>
                    </tr>
                `;
                            }
                        }


                        if (!homeCardRequests) {
                            $tbHomeCardRequest.html(`
                                                <tr>
                                                    <td colspan="5">
                                                        ไม่พบประวัติการร้องขอบริการโฮมการ์ด
                                                    </td>
                                                </tr>
                                            `);
                        } else {
                            $tbHomeCardRequest.html(homeCardRequests);
                            fnGetShowRegisterExtrapack_HomeCard();
                        }


                        // show button for specific role
                        if ('@UserDetail.Role' === 'HC' || '@UserDetail.Role' === 'ADMIN')
                        {
                            $('#homecard-btn').parent().parent().attr('hidden', false);
                            $('#homecard-btn').remove();
                        }
                        else if ('@UserDetail.Role' === 'CallCentre')
                        {
                            $('#homecard-btn').parent().parent().attr('hidden', false);
                            $('#homecard-btn').click(function () {
                                requestNewHomeCard(customer.projectCode, customer.unitCode, customer.fullNameTh, customer.prospectId);
                                fnGetHomeCard_ListOptionalPackage();
                            });
                        } else {
                            $('div.row.homecard-row').last().find('hr').remove()
                        }
                    }

                    async function fnGetHomeCard_ListOptionalPackage() {
                        var optionTags = '';
                        var dataOptionalPack = await get(baseUrl + '/homecare/api/v1/HomeCard/GetListOptionalPackageHomeCard');
                        if (dataOptionalPack.length > 0) {
                            var optionTags = '';
                            var getid_unitper = 0;
                            var getval_unitper = 0;
                            optionTags += `<option value="0">--เลือกบริการเสริม--</option>`;
                            for (var item of dataOptionalPack) {
                                optionTags += `<option value="${item.extraPackageId}">${item.extraPackageDesc}</option>`;
                            }
                            $('#ddlHomeCardOptionalPackage').html(optionTags)

                            $("#hdfSelectHomecard_unitprice").val(0);
                            $('#txthomecard_unitper').prop("disabled", true);

                            $("#ddlHomeCardOptionalPackage").change(function () {
                                var getchangeid_val = $("#ddlHomeCardOptionalPackage").children("option:selected").val();
                                if (getchangeid_val != 0) {

                                    for (var item of dataOptionalPack) {
                                        if (getchangeid_val == item.extraPackageId) {
                                            getid_unitper = item.extraPackageId;
                                            getval_unitper = item.extraPackageTimes;
                                            _getval_unitprice = item.extraPackagePrice;
                                            $("#txthomecard_unitper").val(getval_unitper);
                                            _getval_total = _getval_unitprice * getval_unitper;
                                            $("#txthomecard_unitprice").text('ครั้ง/ปี : ราคา ' + _getval_total + ' บาท');
                                            $("#hdfSelectHomecard_unitprice").val(_getval_unitprice);
                                        }
                                    }

                                    $('#txthomecard_unitper').prop("disabled", false);
                                } else {
                                    getid_unitper = 0;
                                    getval_unitper = 0;
                                    _getval_unitprice = 0;
                                    $("#txthomecard_unitper").val(getval_unitper);
                                    $('#txthomecard_unitper').prop("disabled", true);
                                    _getval_total = 0;
                                    $("#txthomecard_unitprice").text('ครั้ง/ปี : ราคา ' + _getval_total + ' บาท');
                                    $("#hdfSelectHomecard_unitprice").val(_getval_unitprice);
                                }


                            });

                        }
                    }
                    async function fnGetShowRegisterExtrapack_HomeCard() {
                        var body = {
                            unit_id : @Model.UnitID
                            }
                        await ajaxPost(`${baseUrl}/homecare/api/v1/HomeCard/GetRegistQuotationHomecardForExtraPackageByUnitID`, body, (response) => {
                            if (response) {
                                $.each(response.data, function (index, item) {

                                    var get_extra_package_times = 0;
                                    var optionTags = '';
                                    for ( var item of response.data) {
                                        optionTags += `<option value="${item.extra_package_id}">${item.extra_package_desc}</option>`;
                                        get_extra_package_times = item.extra_package_times;
                                    }
                                    $('#ddlHomeCardOptionalPackage_BoxShow').html(optionTags)
                                    $("#txthomecard_unitper_BoxShow").val(get_extra_package_times);
                                    //$("#txthomecard_unitprice_BoxShow").text('ครั้ง/ปี : ราคา ' + getvaltotalpack + ' บาท');
                                    $("#txthomecard_unitprice_BoxShow").text('ครั้ง/ปี : ');
                                    $("#txthomecard_unitprice_BoxShow_used").text('('+ get_extra_package_times + '/'+ get_extra_package_times +')'+ ' (เหลือ/ทั้งหมด)');
                                    $('#txthomecard_unitper_BoxShow').prop("disabled", true);
                                });

                            }
                        });
                    }


                    function fncalUnitPerPrice(value) {
                        if (value != 0) {
                            _getval_total = _getval_unitprice * value;
                            $("#txthomecard_unitprice").text('ครั้ง/ปี : ราคา ' + _getval_total + ' บาท');
                            $("#hdfSelectHomecard_unitprice").val(_getval_unitprice);
                        } else {
                            _getval_total = 0;
                        }
                    }

                    //------------- **/. Optional Package HomeCard **-------------------------------------------

                    function requestNewHomeCard(projectCode, unitCode, customerName, prospectId) {
                        // only call center can make a request
                        if ('@UserDetail.Role' === 'CallCentre') {
                            if (!$('#request-homecard-modal').length) {
                                // add modal if not exists
                                $('body').append(`
                        <div class="modal fade" id="request-homecard-modal" tabindex="-1" role="dialog" aria-labelledby="requestHomeCardModal">
                            <div class="modal-dialog modal-lg" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h4 class="modal-title text-blue"><i class="fa fa-credit-card"></i> SIGN UP FOR HOMECARD</h4>
                                    </div>
                                    <form id="request-homecard-form">
                                        <div class="modal-body">
                                            <div class="row">
                                                <div class="form-group col-xs-12">
                                                    <label class="control-label">ชื่อลูกค้า</label>
                                                    <p class="form-control-static homecard-control text-blue">คุณ${customerName}</p>
                                                    <input id="prospect-id" name="prospect-id" type="hidden" value="${prospectId}"/>
                                                </div>
                                                <div class="form-group col-xs-12">
                                                    <div class="col-xs-6" style="padding-left: 0">
                                                        <label class="control-label">เหตุผลที่ลูกค้าปฎิเสธ</label>
                                                        <div class="input-group">
                                                            <span class="input-group-addon"><input type="checkbox" id="homecard-cancel"></span>
                                                            <select class="form-control" id="homecard-reason-cancel" disabled></select>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-6" style="padding-left: 0">
                                                        <label class="control-label">หมายเหตุเพิ่มเติม</label>
                                                        <input class="form-control" id="homecard-reason-remark" placeholder="หมายเหตุ (ถ้ามี)">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                                    <label class="control-label">ประเภทบัตร</label>
                                                    <select class="form-control" id="homecard-type-select" style="text-transform: uppercase;"></select>
                                                </div>
                                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                                    <label class="control-label">อายุการใช้งาน</label>
                                                    <p class="form-control-static homecard-control text-blue">1 ปี</p>
                                                </div>
                                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                                    <label class="control-label">บริการซ่อมแซม</label>
                                                    <p class="form-control-static homecard-control" id="homecard-repair-times">-</p>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                                    <label class="control-label">งานเก็บประกัน + ทาสี</label>
                                                    <p class="form-control-static homecard-control" id="homecard-coloring-times">-</p>
                                                </div>
                                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                                    <label class="control-label">Home Check Up</label>
                                                    <p class="form-control-static homecard-control" id="homecard-checkup-times">-</p>
                                                </div>
                                                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                                                    <label class="control-label">บริการงานฉุกเฉิน</label>
                                                    <p class="form-control-static homecard-control" id="homecard-urgent-times">-</p>
                                                </div>
                                            </div>

                                            <div id="divbox_HomeCard_SignUp_Package" class="row">
                                                <div class="form-group col-xs-12 col-sm-12 col-lg-12">
                                                    <div id="HomeCard_SignUp_Package">
                                                            <label class="control-label">บริการเสริม :</label>
                                                            <div id="div_inputgroup_hc_optionalpack" class="input-group-ddl-form2">
                                                                <div class="col-xs-12 col-sm-6 col-lg-6" style="padding-left:0;">
                                                                    <select class="form-control" id="ddlHomeCardOptionalPackage" style="min-width:5rem;"></select>
                                                                    <input id="txthomecard_unitper" type="number" class="form-control" onkeyup="fncalUnitPerPrice(this.value)" />
                                                                </div>
                                                                <div  class="col-xs-12 col-sm-6 col-lg-offset-2 col-lg-4">
                                                                    <span id="txthomecard_unitprice" class="label-txt"></span>
                                                                    <input id="hdfSelectHomecard_unitprice" type="hidden" />
                                                                </div>
                                                            </div>
                                                    </div>
                                                </div>
                                             </div>
                                        </div>
                                        <div class="modal-footer">
                                            <div class="btn-group btn-group-justified" role="group" aria-label="...">
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-primary" type="submit">ส่ง</button>
                                                </div>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-default" data-dismiss="modal">ยกเลิก</button>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    `);

                                $("#request-homecard-modal").on('hide.bs.modal', function(){
                                    $('#txthomecard_unitper').val('');
                                    $('#txthomecard_unitprice').text('');
                                });

                                $('#homecard-cancel').click(function () {
                                    if ($('#homecard-cancel').is(":checked")) {
                                        $('#homecard-reason-cancel').prop("disabled", false);
                                        $('#homecard-type-select').prop("disabled", true);
                                    } else {
                                        $('#homecard-reason-cancel').prop("disabled", true);
                                        $('#homecard-type-select').prop("disabled", false);
                                    }
                                });
                                var reasonOption = '';
                                $('#homecard-reason-cancel').append("<option> -- โปรดเลือกเหตุผล -- </option>");

                                for (var reason of notSellingReason) {
                                    reasonOption += `<option value="${reason.id}">${reason.description}</option>`;
                                }

                                $('#homecard-reason-cancel').append(reasonOption);

                                // bind homecard type select
                                var optionTags = '';
                                for (var type of homeCardType)
                                {
                                    var price = homeCardPrice.find(p => p.homeCardTypeId === type.id);
                                    optionTags += `<option value="${type.id}" style="text-transform: uppercase;">${type.description} : ${price.vatIncludedPrice.toThaiBath()}/รายการ</option>`;
                                }
                                $('#homecard-type-select').html(optionTags).change(renderHomeCardType);

                                // attach event to homecard form
                                $('#request-homecard-form').submit(async function (e) {
                                    e.preventDefault();

                                    var homeCardTypeId = !$('#homecard-type-select').is(":disabled") ? +$('#homecard-type-select').val() : null;
                                    var notSellingReasonId = !$('#homecard-reason-cancel').is(":disabled") ? +$('#homecard-reason-cancel').val() : null;

                                    if ($('#homecard-cancel').is(":checked") && !notSellingReasonId) {
                                        modalWaring("กรุณาเลือกเหตุผล");
                                        return;
                                    }

                                    var getextra_package_id = $('#ddlHomeCardOptionalPackage').val() ? $('#ddlHomeCardOptionalPackage').val() : 0 ;
                                    var getextra_package_times = $("#txthomecard_unitper").val() ? $("#txthomecard_unitper").val() : 0 ;
                                    var getextra_package_price =  $("#hdfSelectHomecard_unitprice").val() * getextra_package_times;

                                    var remark = $('#homecard-reason-remark').val() || null;

                                    var requestBody = {
                                        homeCardTypeId,
                                        notSellingReasonId,
                                        remark,
                                            username: '@UserDetail.CodeName',
                                            extra_package_id: getextra_package_id,
                                            extra_package_times: getextra_package_times,
                                            extra_package_price : getextra_package_price,
                                        };
                                await page.loading();
                                await ajaxPost(`${baseUrl}/homecare/api/v1/HomeCard/${unitCode}/Request`, requestBody, function (response) {
                                    if (response) {
                                        $('#request-homecard-modal').modal('hide').on('hidden.bs.modal', async function () {
                                            modalSuccess('บันทึกข้อมูลสำเร็จ');
                                            $('#request-homecard-modal').off('hidden.bs.modal');
                                            renderHomeCardPanel();
                                        });
                                        }
                                        });
                                await page.loaded();
                                    });
                            }
                            $('#request-homecard-modal').modal('show');
                            renderHomeCardType($('#homecard-type-select').get(0));
                        }

                    }

                    function renderHomeCardType(element) {

                        if (!element.value && this.value)
                        {
                            element = this;
                        }

                        var type = homeCardType.find(t => t.id === +element.value);
                        var blueText = ` class="text-blue"`;
                        var redText = ` style="color: crimson;"`;
                        $('#homecard-repair-times').html(`<span${type.repairTimes ? blueText : redText}>${type.repairTimes} ครั้ง<span>`);
                        $('#homecard-coloring-times').html(`<span${type.warrantyAndColoringTimes ? blueText : redText}>${type.warrantyAndColoringTimes} ครั้ง<span>`);
                        $('#homecard-checkup-times').html(`<span${type.checkupTimes ? blueText : redText}>${type.checkupTimes} ครั้ง<span>`);
                        $('#homecard-urgent-times').html(`<span${type.urgentTimes ? blueText : redText}>${type.urgentTimes} ครั้ง<span>`);
                    }

                    function calculateHomeCardSumPrice(typeName, price) {
                        $('#' + typeName + '-price').text((price * +$('#homecard-' + typeName).val()).toThaiBath());
                        var sumPrice = 0;
                        for (var type of homeCardType) {
                            sumPrice += +$(`#${type.description.toLowerCase()}-price`).text().split(' บาท')[0].replace(/,/g, '');
                        }
                        $('#sum-price').text(sumPrice.toThaiBath());
                    }

                    // make table row removable
                    function rmTableRow(e, qs, callback) {
                        var table = $(e).parents('table');
                        $(e).closest('tr').remove();
                        if ($(table).find('tbody').children().length === 0) {
                            $(table).parents('.row').remove();
                            if (qs) {
                                $(qs).attr('disabled', true);
                            }
                        }
                        // rewrite row number
                        $.each($(table).find('tbody tr'), function (i, e) {
                            $(e).find('td').first().text(i + 1);
                        });
                        if (callback) {
                            callback();
                        }
                    }

                    Date.prototype.toThaiDate = function (separator = '/') {
                        if (this.getFullYear() > 1970) {
                            return ('0'.repeat(2 - this.getDate().toString().length) + this.getDate())
                                + separator
                                + ('0'.repeat(2 - (this.getMonth() + 1).toString().length) + (this.getMonth() + 1))
                                + separator
                                + this.getFullYear();
                        } else {
                            return '';
                        }
                    }

        Number.prototype.toThaiBath = function (decimalDigit = 2) {
            return this.toFixed(decimalDigit).replace(/\d(?=(\d{3})+\.)/g, '$&,') + ' บาท';
    }
    async function pageReciveRender() {
        var perpage = $(`#ddlPaging`).val();
        var start = (currPage * perpage) - (perpage-1);
        var endrecord = (currPage * perpage);
        var index = 0;
        var item = []
        $("#tbSearchDetail tbody tr").remove();

                                var counterx = 0;
                                // clear old result

                                var receiveJobText = { text: "", index: 0};

                                for (var x = 0; x <= dataReciveAll.length; x++) {

                                    item = dataReciveAll[x];

                                    if (item != undefined) {
                                        if ($('#receiveJobCode').val() == "0" ||
                                            ($('#receiveJobCode').val() == "1" && item.receiveJobCode == "R") ||
                                            ($('#receiveJobCode').val() == "2" && item.receiveJobCode == "RA") ||
                                            ($('#receiveJobCode').val() == "3" && item.receiveJobCode == "RC")) {
                                            if (!$('#cbChina').val() || ($('#cbChina').val() == "check" && item.flagChina) || ($('#cbChina').val() == "uncheck" && !item.flagChina)) {
                                                if (!$('#cbVip').val() || ($('#cbVip').val() == "check" && item.flagVIP) || ($('#cbVip').val() == "uncheck" && !item.flagVIP)) {
                                                    if (!$('#cbUrgent').val() || ($('#cbUrgent').val() == "check" && item.flagUrgent) || ($('#cbUrgent').val() == "uncheck" && !item.flagUrgent)) {
                                                        if (checkRenderInformDate('cbEndDate', 'informEndDate', 'cbStartDate', 'informStartDate', item.informDate)) {
                                                            if ($('#ddlReceiveMainProcessId').val() == "0" || $('#ddlReceiveMainProcessId').val() == item.receiveStatusId) {
                                                                if (receiveJobText.index >= start - 1 && receiveJobText.index <= endrecord - 1) {
                                                                    renderReceiveRow(index, item, receiveJobText);
                                                                    //counterx++;
                                                                }
                                                                else {
                                                                    if (item.receiveJobNoText != receiveJobText.text) {
                                                                        ++receiveJobText.index
                                                                        //counterx++;
                                                                    }

                                                                }

                                                                counterx = receiveJobText.index;
                                                            }
                                                            else {
                                                                console.log(item.receiveId);
                                                                //endrecord = endrecord + 1;
                                                            }
                                                        }
                                                        else {
                                                            console.log(item.receiveId);
                                                            //endrecord = endrecord + 1;
                                                        }
                                                    }
                                                }
                                            }
                                            else {

                                                console.log(item.receiveId);
                                            }
                                        }
                                        else {

                                            console.log(item.receiveId);
                                        }
                                        if (item.receiveJobNoText != receiveJobText.text) {
                                            receiveJobText.text = item.receiveJobNoText;
                                            //++counter;
                                        }
                                        else {
                                            console.log(item.receiveId);
                                        }


                                    }




                                }
                                $('#sum-result').text(`รายการ/หน้า จากทั้งหมด ${counterx} รายการ`);
                                if (counterx <= perpage) {
                                    $("#pagingPanel").removeClass("pagination");
                                    $("#pagingPanel").addClass("hide");
                                }
                                else {
                                    $("#pagingPanel").removeClass("hide");
                                    $("#pagingPanel").addClass("pagination");

                                }
                            }

                            function my_function(evt) {
                                if (evt == 'pre') {
                                    if (currPage > 1) {
                                        currPage = currPage -1
                                    } else {
                                        currPage = 1

                                    }

        }
        else {
            currPage = currPage + 1
        }
        page.loading();
         pageReciveRender();
        page.loaded();
        console.log(evt);

    }
    function onPagingChange() {
        page.loading();
        currPage = 1;
         pageReciveRender();
        page.loaded();
    }

    </script>
    @section AddToHead{
        <script src="~/Scripts/popper.min.js"></script>

        @*dataTable*@
        <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/1.10.21/js/dataTables.bootstrap4.min.js"></script>
        <link href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css" rel="stylesheet">
        @*dataTable*@

        <link rel="stylesheet" href="~/assets/plugins/datatables/dataTables.bootstrap-1.10.12.min.css" />
        <link rel="stylesheet" href="~/assets/plugins/datatables/responsive.bootstrap.min.css" />
    }
