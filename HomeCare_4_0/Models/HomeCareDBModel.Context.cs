//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HomeCare_4_0.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public partial class HomeCareDBEntities : DbContext
    {
        public HomeCareDBEntities()
            : base("name=HomeCareDBEntities")
        {
            Database.CommandTimeout = 300;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<HC_TM_Lookup_Type> HC_TM_Lookup_Type { get; set; }
        public virtual DbSet<HC_TM_Attachment> HC_TM_Attachment { get; set; }
        public virtual DbSet<HC_TM_Role> HC_TM_Role { get; set; }
        public virtual DbSet<TK_V_UserAcct> TK_V_UserAcct { get; set; }
        public virtual DbSet<TK_V_UserAcctRole> TK_V_UserAcctRole { get; set; }
        public virtual DbSet<HC_TM_Lookup> HC_TM_Lookup { get; set; }
        public virtual DbSet<HC_TM_List1> HC_TM_List1 { get; set; }
        public virtual DbSet<HC_TM_List2> HC_TM_List2 { get; set; }
        public virtual DbSet<HC_TM_List3> HC_TM_List3 { get; set; }
        public virtual DbSet<HC_TM_List4> HC_TM_List4 { get; set; }
        public virtual DbSet<HC_TM_Location> HC_TM_Location { get; set; }
        public virtual DbSet<HC_TM_SpecL1> HC_TM_SpecL1 { get; set; }
        public virtual DbSet<HC_TM_SpecL2> HC_TM_SpecL2 { get; set; }
        public virtual DbSet<HC_TM_SpecL3> HC_TM_SpecL3 { get; set; }

        public virtual ObjectResult<HC_SP_Get_TD_Attachment_Picture_Result> HC_SP_Get_TD_Attachment_Picture(Nullable<long> worksheet_ID, Nullable<int> attachment_Type_ID)
        {
            var worksheet_IDParameter = worksheet_ID.HasValue ?
                new ObjectParameter("Worksheet_ID", worksheet_ID) :
                new ObjectParameter("Worksheet_ID", typeof(long));

            var attachment_Type_IDParameter = attachment_Type_ID.HasValue ?
                new ObjectParameter("Attachment_Type_ID", attachment_Type_ID) :
                new ObjectParameter("Attachment_Type_ID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Attachment_Picture_Result>("HC_SP_Get_TD_Attachment_Picture", worksheet_IDParameter, attachment_Type_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Receive_Item_Detail_Group_Result> HC_SP_Get_TD_Receive_Item_Detail_Group(Nullable<long> receive_ID)
        {
            var receive_IDParameter = receive_ID.HasValue ?
                new ObjectParameter("Receive_ID", receive_ID) :
                new ObjectParameter("Receive_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Receive_Item_Detail_Group_Result>("HC_SP_Get_TD_Receive_Item_Detail_Group", receive_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Receive_Item_Status_Result> HC_SP_Get_TD_Receive_Item_Status(string project_Code, string unit_Code)
        {
            var project_CodeParameter = project_Code != null ?
                new ObjectParameter("Project_Code", project_Code) :
                new ObjectParameter("Project_Code", typeof(string));

            var unit_CodeParameter = unit_Code != null ?
                new ObjectParameter("Unit_Code", unit_Code) :
                new ObjectParameter("Unit_Code", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Receive_Item_Status_Result>("HC_SP_Get_TD_Receive_Item_Status", project_CodeParameter, unit_CodeParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TM_Location_Result> HC_SP_Get_TM_Location(Nullable<long> specL1_ID)
        {
            var specL1_IDParameter = specL1_ID.HasValue ?
                new ObjectParameter("SpecL1_ID", specL1_ID) :
                new ObjectParameter("SpecL1_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TM_Location_Result>("HC_SP_Get_TM_Location", specL1_IDParameter);
        }

        public virtual ObjectResult<string> HC_SP_Get_TM_Priority(Nullable<int> spec3_ID)
        {
            var spec3_IDParameter = spec3_ID.HasValue ?
                new ObjectParameter("Spec3_ID", spec3_ID) :
                new ObjectParameter("Spec3_ID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Get_TM_Priority", spec3_IDParameter);
        }

        public virtual int HC_SP_Insert_TD_Approve(Nullable<long> tD_WorkSheet_ID, string paymentType, Nullable<int> paymentType_ID, string appoveRemark, string user)
        {
            var tD_WorkSheet_IDParameter = tD_WorkSheet_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_ID", tD_WorkSheet_ID) :
                new ObjectParameter("TD_WorkSheet_ID", typeof(long));

            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));

            var paymentType_IDParameter = paymentType_ID.HasValue ?
                new ObjectParameter("PaymentType_ID", paymentType_ID) :
                new ObjectParameter("PaymentType_ID", typeof(int));

            var appoveRemarkParameter = appoveRemark != null ?
                new ObjectParameter("AppoveRemark", appoveRemark) :
                new ObjectParameter("AppoveRemark", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_TD_Approve", tD_WorkSheet_IDParameter, paymentTypeParameter, paymentType_IDParameter, appoveRemarkParameter, userParameter);
        }

        public virtual int HC_SP_Insert_TD_JobNo(Nullable<long> project_ID, string project_Code, Nullable<long> unit_ID, string job_Code, string user, ObjectParameter tD_JobNo_ID)
        {
            var project_IDParameter = project_ID.HasValue ?
                new ObjectParameter("Project_ID", project_ID) :
                new ObjectParameter("Project_ID", typeof(long));

            var project_CodeParameter = project_Code != null ?
                new ObjectParameter("Project_Code", project_Code) :
                new ObjectParameter("Project_Code", typeof(string));

            var unit_IDParameter = unit_ID.HasValue ?
                new ObjectParameter("Unit_ID", unit_ID) :
                new ObjectParameter("Unit_ID", typeof(long));

            var job_CodeParameter = job_Code != null ?
                new ObjectParameter("Job_Code", job_Code) :
                new ObjectParameter("Job_Code", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_TD_JobNo", project_IDParameter, project_CodeParameter, unit_IDParameter, job_CodeParameter, userParameter, tD_JobNo_ID);
        }

        public virtual int HC_SP_Update_TD_Approve(Nullable<long> tD_Approve_ID, Nullable<bool> status, string role, string remark, string user)
        {
            var tD_Approve_IDParameter = tD_Approve_ID.HasValue ?
                new ObjectParameter("TD_Approve_ID", tD_Approve_ID) :
                new ObjectParameter("TD_Approve_ID", typeof(long));

            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));

            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_Approve", tD_Approve_IDParameter, statusParameter, roleParameter, remarkParameter, userParameter);
        }

        public virtual int HC_SP_Update_TD_Attachment(Nullable<long> iD, string user)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_Attachment", iDParameter, userParameter);
        }

        public virtual int HC_SP_Update_TD_Receive_Item(Nullable<long> receive_Item_ID, string received_Item_Remark, Nullable<long> received_Item_Status, Nullable<long> received_Item_Flg_Repair_Transfer, Nullable<long> received_Item_Cancel_Reason_ID, string user_Code)
        {
            var receive_Item_IDParameter = receive_Item_ID.HasValue ?
                new ObjectParameter("Receive_Item_ID", receive_Item_ID) :
                new ObjectParameter("Receive_Item_ID", typeof(long));

            var received_Item_RemarkParameter = received_Item_Remark != null ?
                new ObjectParameter("Received_Item_Remark", received_Item_Remark) :
                new ObjectParameter("Received_Item_Remark", typeof(string));

            var received_Item_StatusParameter = received_Item_Status.HasValue ?
                new ObjectParameter("Received_Item_Status", received_Item_Status) :
                new ObjectParameter("Received_Item_Status", typeof(long));

            var received_Item_Flg_Repair_TransferParameter = received_Item_Flg_Repair_Transfer.HasValue ?
                new ObjectParameter("Received_Item_Flg_Repair_Transfer", received_Item_Flg_Repair_Transfer) :
                new ObjectParameter("Received_Item_Flg_Repair_Transfer", typeof(long));

            var received_Item_Cancel_Reason_IDParameter = received_Item_Cancel_Reason_ID.HasValue ?
                new ObjectParameter("Received_Item_Cancel_Reason_ID", received_Item_Cancel_Reason_ID) :
                new ObjectParameter("Received_Item_Cancel_Reason_ID", typeof(long));

            var user_CodeParameter = user_Code != null ?
                new ObjectParameter("User_Code", user_Code) :
                new ObjectParameter("User_Code", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_Receive_Item", receive_Item_IDParameter, received_Item_RemarkParameter, received_Item_StatusParameter, received_Item_Flg_Repair_TransferParameter, received_Item_Cancel_Reason_IDParameter, user_CodeParameter);
        }

        public virtual ObjectResult<TK_SP_Get_Project_Authen_Result> TK_SP_Get_Project_Authen(Nullable<long> user_ID, Nullable<bool> allPJ)
        {
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(long));

            var allPJParameter = allPJ.HasValue ?
                new ObjectParameter("AllPJ", allPJ) :
                new ObjectParameter("AllPJ", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TK_SP_Get_Project_Authen_Result>("TK_SP_Get_Project_Authen", user_IDParameter, allPJParameter);
        }

        public virtual ObjectResult<string> TK_SP_Get_Email(Nullable<long> user_Code)
        {
            var user_CodeParameter = user_Code.HasValue ?
                new ObjectParameter("User_Code", user_Code) :
                new ObjectParameter("User_Code", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TK_SP_Get_Email", user_CodeParameter);
        }

        public virtual ObjectResult<string> HC_SP_Get_Email_Approve(Nullable<long> tD_Approve_ID, string projectCode, string role, string typeEmail, Nullable<int> typeBotton)
        {
            var tD_Approve_IDParameter = tD_Approve_ID.HasValue ?
                new ObjectParameter("TD_Approve_ID", tD_Approve_ID) :
                new ObjectParameter("TD_Approve_ID", typeof(long));

            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));

            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));

            var typeEmailParameter = typeEmail != null ?
                new ObjectParameter("TypeEmail", typeEmail) :
                new ObjectParameter("TypeEmail", typeof(string));

            var typeBottonParameter = typeBotton.HasValue ?
                new ObjectParameter("TypeBotton", typeBotton) :
                new ObjectParameter("TypeBotton", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Get_Email_Approve", tD_Approve_IDParameter, projectCodeParameter, roleParameter, typeEmailParameter, typeBottonParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Receive_Item_Result> HC_SP_Get_TD_Receive_Item(Nullable<long> tD_Receive_ID)
        {
            var tD_Receive_IDParameter = tD_Receive_ID.HasValue ?
                new ObjectParameter("TD_Receive_ID", tD_Receive_ID) :
                new ObjectParameter("TD_Receive_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Receive_Item_Result>("HC_SP_Get_TD_Receive_Item", tD_Receive_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Approve_Line_Result> HC_SP_Get_TD_Approve_Line(Nullable<long> tD_Approve_ID)
        {
            var tD_Approve_IDParameter = tD_Approve_ID.HasValue ?
                new ObjectParameter("TD_Approve_ID", tD_Approve_ID) :
                new ObjectParameter("TD_Approve_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Approve_Line_Result>("HC_SP_Get_TD_Approve_Line", tD_Approve_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Check_CloseJob_Result> HC_SP_Check_CloseJob(Nullable<long> reference_ID)
        {
            var reference_IDParameter = reference_ID.HasValue ?
                new ObjectParameter("Reference_ID", reference_ID) :
                new ObjectParameter("Reference_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Check_CloseJob_Result>("HC_SP_Check_CloseJob", reference_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_V_Receive_Item_Result> HC_SP_Get_V_Receive_Item(Nullable<long> workSheetID)
        {
            var workSheetIDParameter = workSheetID.HasValue ?
                new ObjectParameter("WorkSheetID", workSheetID) :
                new ObjectParameter("WorkSheetID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_V_Receive_Item_Result>("HC_SP_Get_V_Receive_Item", workSheetIDParameter);
        }

        public virtual ObjectResult<WA_HC_CheckLogin_Result> WA_HC_CheckLogin(string login, string pWD, string iIcontactEmail)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));

            var pWDParameter = pWD != null ?
                new ObjectParameter("PWD", pWD) :
                new ObjectParameter("PWD", typeof(string));

            var iIcontactEmailParameter = iIcontactEmail != null ?
                new ObjectParameter("IIcontactEmail", iIcontactEmail) :
                new ObjectParameter("IIcontactEmail", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WA_HC_CheckLogin_Result>("WA_HC_CheckLogin", loginParameter, pWDParameter, iIcontactEmailParameter);
        }

        public virtual ObjectResult<string> HC_SP_Get_Email(string typeEmail, string projectCode, Nullable<long> vendorID, Nullable<bool> flagChina)
        {
            var typeEmailParameter = typeEmail != null ?
                new ObjectParameter("TypeEmail", typeEmail) :
                new ObjectParameter("TypeEmail", typeof(string));

            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));

            var flagChinaParameter = flagChina.HasValue ?
                new ObjectParameter("FlagChina", flagChina) :
                new ObjectParameter("FlagChina", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Get_Email", typeEmailParameter, projectCodeParameter, vendorIDParameter, flagChinaParameter);
        }

        public virtual ObjectResult<Nullable<long>> HC_SP_Insert_TD_Attachment(Nullable<long> reference_ID, string reference_Type, Nullable<long> attachment_Type_ID, string attachment_Detail, string attachment_URL, string attachmentAdobe_URL, string thumbnail_URL, string user, Nullable<long> reference_Item_ID)
        {
            var reference_IDParameter = reference_ID.HasValue ?
                new ObjectParameter("Reference_ID", reference_ID) :
                new ObjectParameter("Reference_ID", typeof(long));

            var reference_TypeParameter = reference_Type != null ?
                new ObjectParameter("Reference_Type", reference_Type) :
                new ObjectParameter("Reference_Type", typeof(string));

            var attachment_Type_IDParameter = attachment_Type_ID.HasValue ?
                new ObjectParameter("Attachment_Type_ID", attachment_Type_ID) :
                new ObjectParameter("Attachment_Type_ID", typeof(long));

            var attachment_DetailParameter = attachment_Detail != null ?
                new ObjectParameter("Attachment_Detail", attachment_Detail) :
                new ObjectParameter("Attachment_Detail", typeof(string));

            var attachment_URLParameter = attachment_URL != null ?
                new ObjectParameter("Attachment_URL", attachment_URL) :
                new ObjectParameter("Attachment_URL", typeof(string));

            var attachmentAdobe_URLParameter = attachmentAdobe_URL != null ?
                new ObjectParameter("AttachmentAdobe_URL", attachmentAdobe_URL) :
                new ObjectParameter("AttachmentAdobe_URL", typeof(string));

            var thumbnail_URLParameter = thumbnail_URL != null ?
                new ObjectParameter("Thumbnail_URL", thumbnail_URL) :
                new ObjectParameter("Thumbnail_URL", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            var reference_Item_IDParameter = reference_Item_ID.HasValue ?
                new ObjectParameter("Reference_Item_ID", reference_Item_ID) :
                new ObjectParameter("Reference_Item_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("HC_SP_Insert_TD_Attachment", reference_IDParameter, reference_TypeParameter, attachment_Type_IDParameter, attachment_DetailParameter, attachment_URLParameter, attachmentAdobe_URLParameter, thumbnail_URLParameter, userParameter, reference_Item_IDParameter);
        }

        public virtual int HC_SP_Update_TD_AttachmentItemID(Nullable<long> reference_ID, Nullable<long> reference_Item_ID, string reference_type)
        {
            var reference_IDParameter = reference_ID.HasValue ?
                new ObjectParameter("Reference_ID", reference_ID) :
                new ObjectParameter("Reference_ID", typeof(long));

            var reference_Item_IDParameter = reference_Item_ID.HasValue ?
                new ObjectParameter("Reference_Item_ID", reference_Item_ID) :
                new ObjectParameter("Reference_Item_ID", typeof(long));

            var reference_typeParameter = reference_type != null ?
                new ObjectParameter("Reference_type", reference_type) :
                new ObjectParameter("Reference_type", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_AttachmentItemID", reference_IDParameter, reference_Item_IDParameter, reference_typeParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Approve_Result> HC_SP_Get_TD_Approve(Nullable<long> tD_WorkSheet_ID)
        {
            var tD_WorkSheet_IDParameter = tD_WorkSheet_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_ID", tD_WorkSheet_ID) :
                new ObjectParameter("TD_WorkSheet_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Approve_Result>("HC_SP_Get_TD_Approve", tD_WorkSheet_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Attachment_Result> HC_SP_Get_TD_Attachment(Nullable<long> reference_ID, string reference_Type, Nullable<long> attachment_Type_ID, Nullable<long> reference_Item_ID)
        {
            var reference_IDParameter = reference_ID.HasValue ?
                new ObjectParameter("Reference_ID", reference_ID) :
                new ObjectParameter("Reference_ID", typeof(long));

            var reference_TypeParameter = reference_Type != null ?
                new ObjectParameter("Reference_Type", reference_Type) :
                new ObjectParameter("Reference_Type", typeof(string));

            var attachment_Type_IDParameter = attachment_Type_ID.HasValue ?
                new ObjectParameter("Attachment_Type_ID", attachment_Type_ID) :
                new ObjectParameter("Attachment_Type_ID", typeof(long));

            var reference_Item_IDParameter = reference_Item_ID.HasValue ?
                new ObjectParameter("Reference_Item_ID", reference_Item_ID) :
                new ObjectParameter("Reference_Item_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Attachment_Result>("HC_SP_Get_TD_Attachment", reference_IDParameter, reference_TypeParameter, attachment_Type_IDParameter, reference_Item_IDParameter);
        }

        public virtual int TK_SP_Insert_activity_NOTUSED(string activityCode, Nullable<long> prospect_id, Nullable<long> project_id, string user, Nullable<long> ref_Activity_id)
        {
            var activityCodeParameter = activityCode != null ?
                new ObjectParameter("activityCode", activityCode) :
                new ObjectParameter("activityCode", typeof(string));

            var prospect_idParameter = prospect_id.HasValue ?
                new ObjectParameter("Prospect_id", prospect_id) :
                new ObjectParameter("Prospect_id", typeof(long));

            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("Project_id", project_id) :
                new ObjectParameter("Project_id", typeof(long));

            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));

            var ref_Activity_idParameter = ref_Activity_id.HasValue ?
                new ObjectParameter("Ref_Activity_id", ref_Activity_id) :
                new ObjectParameter("Ref_Activity_id", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TK_SP_Insert_activity_NOTUSED", activityCodeParameter, prospect_idParameter, project_idParameter, userParameter, ref_Activity_idParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_EndFix(Nullable<long> reference_ID, Nullable<long> reference_Item_ID)
        {
            var reference_IDParameter = reference_ID.HasValue ?
                new ObjectParameter("Reference_ID", reference_ID) :
                new ObjectParameter("Reference_ID", typeof(long));

            var reference_Item_IDParameter = reference_Item_ID.HasValue ?
                new ObjectParameter("Reference_Item_ID", reference_Item_ID) :
                new ObjectParameter("Reference_Item_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_EndFix", reference_IDParameter, reference_Item_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_WO_Status_Result> HC_SP_Get_WO_Status(Nullable<long> worksheetID)
        {
            var worksheetIDParameter = worksheetID.HasValue ?
                new ObjectParameter("worksheetID", worksheetID) :
                new ObjectParameter("worksheetID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_WO_Status_Result>("HC_SP_Get_WO_Status", worksheetIDParameter);
        }

        public virtual ObjectResult<TK_SP_Get_Unit_By_ProjectID_Result> TK_SP_Get_Unit_By_ProjectID(Nullable<long> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TK_SP_Get_Unit_By_ProjectID_Result>("TK_SP_Get_Unit_By_ProjectID", projectIDParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_ChangeVendor(Nullable<long> worksheet_ID)
        {
            var worksheet_IDParameter = worksheet_ID.HasValue ?
                new ObjectParameter("Worksheet_ID", worksheet_ID) :
                new ObjectParameter("Worksheet_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_ChangeVendor", worksheet_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_DocumentByWorkSheet_Result> HC_SP_Get_DocumentByWorkSheet(Nullable<long> projectID, Nullable<long> unitID, string unitAddress, Nullable<System.DateTime> workSheet_DateFrom, Nullable<System.DateTime> workSheet_DateTo, string workSheetIDList)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(long));

            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(long));

            var unitAddressParameter = unitAddress != null ?
                new ObjectParameter("UnitAddress", unitAddress) :
                new ObjectParameter("UnitAddress", typeof(string));

            var workSheet_DateFromParameter = workSheet_DateFrom.HasValue ?
                new ObjectParameter("WorkSheet_DateFrom", workSheet_DateFrom) :
                new ObjectParameter("WorkSheet_DateFrom", typeof(System.DateTime));

            var workSheet_DateToParameter = workSheet_DateTo.HasValue ?
                new ObjectParameter("WorkSheet_DateTo", workSheet_DateTo) :
                new ObjectParameter("WorkSheet_DateTo", typeof(System.DateTime));

            var workSheetIDListParameter = workSheetIDList != null ?
                new ObjectParameter("WorkSheetIDList", workSheetIDList) :
                new ObjectParameter("WorkSheetIDList", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_DocumentByWorkSheet_Result>("HC_SP_Get_DocumentByWorkSheet", projectIDParameter, unitIDParameter, unitAddressParameter, workSheet_DateFromParameter, workSheet_DateToParameter, workSheetIDListParameter);
        }

        public virtual ObjectResult<HC_SP_Get_DocumentByFormType_Result> HC_SP_Get_DocumentByFormType(string workSheetIDList)
        {
            var workSheetIDListParameter = workSheetIDList != null ?
                new ObjectParameter("WorkSheetIDList", workSheetIDList) :
                new ObjectParameter("WorkSheetIDList", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_DocumentByFormType_Result>("HC_SP_Get_DocumentByFormType", workSheetIDListParameter);
        }

        public virtual int HC_SP_Insert_DocumentByWorkSheet(Nullable<long> tD_WorkSheet_ID, string formTypeName, string fileName, string user, Nullable<long> VendorID, string VendorName = null)
        {
            var tD_WorkSheet_IDParameter = tD_WorkSheet_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_ID", tD_WorkSheet_ID) :
                new ObjectParameter("TD_WorkSheet_ID", typeof(long));

            var formTypeNameParameter = formTypeName != null ?
                new ObjectParameter("FormTypeName", formTypeName) :
                new ObjectParameter("FormTypeName", typeof(string));

            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            var vendorIdParam = VendorID.HasValue ?
                new ObjectParameter("VendorID", VendorID) :
                new ObjectParameter("VendorID", typeof(long));

            var vendorNameParam = VendorName != null ?
                new ObjectParameter("VendorName", VendorName) :
                new ObjectParameter("VendorName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_DocumentByWorkSheet", tD_WorkSheet_IDParameter, formTypeNameParameter, fileNameParameter, userParameter, vendorIdParam, vendorNameParam);
        }

        public virtual ObjectResult<HC_SP_Get_DocumentFByWorkSheet_Result> HC_SP_Get_DocumentFByWorkSheet(Nullable<long> worksheetID)
        {
            var worksheetIDParameter = worksheetID.HasValue ?
                new ObjectParameter("WorksheetID", worksheetID) :
                new ObjectParameter("WorksheetID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_DocumentFByWorkSheet_Result>("HC_SP_Get_DocumentFByWorkSheet", worksheetIDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Attachment_Receive_Result> HC_SP_Get_TD_Attachment_Receive(Nullable<long> receiveItemID)
        {
            var receiveItemIDParameter = receiveItemID.HasValue ?
                new ObjectParameter("ReceiveItemID", receiveItemID) :
                new ObjectParameter("ReceiveItemID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Attachment_Receive_Result>("HC_SP_Get_TD_Attachment_Receive", receiveItemIDParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_DuplicateFix(Nullable<long> unitID, Nullable<long> ddlGuaranteeID, Nullable<long> ddlSpec1ID, Nullable<long> ddlSpec2ID, Nullable<long> ddlSpec3ID, Nullable<long> ddlLocationID)
        {
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(long));

            var ddlGuaranteeIDParameter = ddlGuaranteeID.HasValue ?
                new ObjectParameter("ddlGuaranteeID", ddlGuaranteeID) :
                new ObjectParameter("ddlGuaranteeID", typeof(long));

            var ddlSpec1IDParameter = ddlSpec1ID.HasValue ?
                new ObjectParameter("ddlSpec1ID", ddlSpec1ID) :
                new ObjectParameter("ddlSpec1ID", typeof(long));

            var ddlSpec2IDParameter = ddlSpec2ID.HasValue ?
                new ObjectParameter("ddlSpec2ID", ddlSpec2ID) :
                new ObjectParameter("ddlSpec2ID", typeof(long));

            var ddlSpec3IDParameter = ddlSpec3ID.HasValue ?
                new ObjectParameter("ddlSpec3ID", ddlSpec3ID) :
                new ObjectParameter("ddlSpec3ID", typeof(long));

            var ddlLocationIDParameter = ddlLocationID.HasValue ?
                new ObjectParameter("ddlLocationID", ddlLocationID) :
                new ObjectParameter("ddlLocationID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_DuplicateFix", unitIDParameter, ddlGuaranteeIDParameter, ddlSpec1IDParameter, ddlSpec2IDParameter, ddlSpec3IDParameter, ddlLocationIDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Receive_Item_Modal_Result> HC_SP_Get_TD_Receive_Item_Modal(Nullable<long> receive_Item_ID)
        {
            var receive_Item_IDParameter = receive_Item_ID.HasValue ?
                new ObjectParameter("Receive_Item_ID", receive_Item_ID) :
                new ObjectParameter("Receive_Item_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Receive_Item_Modal_Result>("HC_SP_Get_TD_Receive_Item_Modal", receive_Item_IDParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_NotificationHSA(Nullable<long> worksheet_ID)
        {
            var worksheet_IDParameter = worksheet_ID.HasValue ?
                new ObjectParameter("Worksheet_ID", worksheet_ID) :
                new ObjectParameter("Worksheet_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_NotificationHSA", worksheet_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Check_HignValueCustomer_Result> HC_SP_Check_HignValueCustomer(Nullable<long> worksheetID)
        {
            var worksheetIDParameter = worksheetID.HasValue ?
                new ObjectParameter("worksheetID", worksheetID) :
                new ObjectParameter("worksheetID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Check_HignValueCustomer_Result>("HC_SP_Check_HignValueCustomer", worksheetIDParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_BeforApprove(Nullable<long> reference_ID)
        {
            var reference_IDParameter = reference_ID.HasValue ?
                new ObjectParameter("Reference_ID", reference_ID) :
                new ObjectParameter("Reference_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_BeforApprove", reference_IDParameter);
        }

        public virtual int HC_SP_Update_TD_AttachmentDetail(Nullable<long> iD, string attachmentDetail, string user)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));

            var attachmentDetailParameter = attachmentDetail != null ?
                new ObjectParameter("AttachmentDetail", attachmentDetail) :
                new ObjectParameter("AttachmentDetail", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_AttachmentDetail", iDParameter, attachmentDetailParameter, userParameter);
        }

        public virtual int HC_SP_Delete_TD_Calendar(Nullable<int> calendarID, Nullable<int> deleteBy)
        {
            var calendarIDParameter = calendarID.HasValue ?
                new ObjectParameter("CalendarID", calendarID) :
                new ObjectParameter("CalendarID", typeof(int));

            var deleteByParameter = deleteBy.HasValue ?
                new ObjectParameter("DeleteBy", deleteBy) :
                new ObjectParameter("DeleteBy", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Delete_TD_Calendar", calendarIDParameter, deleteByParameter);
        }

        public virtual ObjectResult<Nullable<int>> HC_SP_Insert_TD_Calendar(Nullable<int> projectID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string calendarMessage, Nullable<int> createdBy, Nullable<long> referenceID, Nullable<int> type)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));

            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));

            var calendarMessageParameter = calendarMessage != null ?
                new ObjectParameter("CalendarMessage", calendarMessage) :
                new ObjectParameter("CalendarMessage", typeof(string));

            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));

            var referenceIDParameter = referenceID.HasValue ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(long));

            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HC_SP_Insert_TD_Calendar", projectIDParameter, startDateParameter, endDateParameter, calendarMessageParameter, createdByParameter, referenceIDParameter, typeParameter);
        }

        public virtual int HC_SP_Update_TD_Calendar(Nullable<int> calendarID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string calendarMessage, Nullable<int> updateBy, Nullable<bool> flagAction)
        {
            var calendarIDParameter = calendarID.HasValue ?
                new ObjectParameter("CalendarID", calendarID) :
                new ObjectParameter("CalendarID", typeof(int));

            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));

            var calendarMessageParameter = calendarMessage != null ?
                new ObjectParameter("CalendarMessage", calendarMessage) :
                new ObjectParameter("CalendarMessage", typeof(string));

            var updateByParameter = updateBy.HasValue ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(int));

            var flagActionParameter = flagAction.HasValue ?
                new ObjectParameter("FlagAction", flagAction) :
                new ObjectParameter("FlagAction", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_Calendar", calendarIDParameter, startDateParameter, endDateParameter, calendarMessageParameter, updateByParameter, flagActionParameter);
        }

        public virtual ObjectResult<HC_SP_Get_Quotation_Header_Result> HC_SP_Get_Quotation_Header(Nullable<long> worksheet_ID)
        {
            var worksheet_IDParameter = worksheet_ID.HasValue ?
                new ObjectParameter("Worksheet_ID", worksheet_ID) :
                new ObjectParameter("Worksheet_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_Quotation_Header_Result>("HC_SP_Get_Quotation_Header", worksheet_IDParameter);
        }

        public virtual int HC_SP_Insert_TD_Receive_Item(Nullable<long> tD_Receive_ID, Nullable<long> line_Item_No, Nullable<long> hC_Guarantee_ID, string line_Item_Detail, string line_Item_Remark, string received_Item_Remark, Nullable<long> received_Item_Flg_Repair_Transfer, Nullable<int> statusID, Nullable<bool> active, string user, string hS_Ref_ID, string note, ObjectParameter tD_Receive_Item_ID)
        {
            var tD_Receive_IDParameter = tD_Receive_ID.HasValue ?
                new ObjectParameter("TD_Receive_ID", tD_Receive_ID) :
                new ObjectParameter("TD_Receive_ID", typeof(long));

            var line_Item_NoParameter = line_Item_No.HasValue ?
                new ObjectParameter("Line_Item_No", line_Item_No) :
                new ObjectParameter("Line_Item_No", typeof(long));

            var hC_Guarantee_IDParameter = hC_Guarantee_ID.HasValue ?
                new ObjectParameter("HC_Guarantee_ID", hC_Guarantee_ID) :
                new ObjectParameter("HC_Guarantee_ID", typeof(long));

            var line_Item_DetailParameter = line_Item_Detail != null ?
                new ObjectParameter("Line_Item_Detail", line_Item_Detail) :
                new ObjectParameter("Line_Item_Detail", typeof(string));

            var line_Item_RemarkParameter = line_Item_Remark != null ?
                new ObjectParameter("Line_Item_Remark", line_Item_Remark) :
                new ObjectParameter("Line_Item_Remark", typeof(string));

            var received_Item_RemarkParameter = received_Item_Remark != null ?
                new ObjectParameter("Received_Item_Remark", received_Item_Remark) :
                new ObjectParameter("Received_Item_Remark", typeof(string));

            var received_Item_Flg_Repair_TransferParameter = received_Item_Flg_Repair_Transfer.HasValue ?
                new ObjectParameter("Received_Item_Flg_Repair_Transfer", received_Item_Flg_Repair_Transfer) :
                new ObjectParameter("Received_Item_Flg_Repair_Transfer", typeof(long));

            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));

            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            var hS_Ref_IDParameter = hS_Ref_ID != null ?
                new ObjectParameter("HS_Ref_ID", hS_Ref_ID) :
                new ObjectParameter("HS_Ref_ID", typeof(string));

            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_TD_Receive_Item", tD_Receive_IDParameter, line_Item_NoParameter, hC_Guarantee_IDParameter, line_Item_DetailParameter, line_Item_RemarkParameter, received_Item_RemarkParameter, received_Item_Flg_Repair_TransferParameter, statusIDParameter, activeParameter, userParameter, hS_Ref_IDParameter, noteParameter, tD_Receive_Item_ID);
        }

        public virtual int HC_SP_Insert_TD_Receive(Nullable<long> tD_JobNo_ID, Nullable<long> project_ID, string project_Code, Nullable<long> unit_ID, string unit_Code, Nullable<long> prospect_ID, string firstNameTH, string lastNameTH, string fullNameTH, string firstNameEN, string lastNameEN, string fullNameEN, string telephone, string email, string inform_Remark, Nullable<long> inform_CustomerType_ID, string inform_CustomerName, string inform_CustomerTel, string inform_CustomerEmail, Nullable<System.DateTime> receive_Appointment_Date, Nullable<System.TimeSpan> receive_Appointment_Time_From, Nullable<System.TimeSpan> receive_Appointment_Time_To, Nullable<int> ddlOverAPDate_Reason_ID, string user, Nullable<long> inform_User_ID, Nullable<bool> flagUrgent, Nullable<bool> flagChina, Nullable<bool> flagHS, string icontact_userID, Nullable<long> userID, ObjectParameter tD_Receive_ID)
        {
            var tD_JobNo_IDParameter = tD_JobNo_ID.HasValue ?
                new ObjectParameter("TD_JobNo_ID", tD_JobNo_ID) :
                new ObjectParameter("TD_JobNo_ID", typeof(long));

            var project_IDParameter = project_ID.HasValue ?
                new ObjectParameter("Project_ID", project_ID) :
                new ObjectParameter("Project_ID", typeof(long));

            var project_CodeParameter = project_Code != null ?
                new ObjectParameter("Project_Code", project_Code) :
                new ObjectParameter("Project_Code", typeof(string));

            var unit_IDParameter = unit_ID.HasValue ?
                new ObjectParameter("Unit_ID", unit_ID) :
                new ObjectParameter("Unit_ID", typeof(long));

            var unit_CodeParameter = unit_Code != null ?
                new ObjectParameter("Unit_Code", unit_Code) :
                new ObjectParameter("Unit_Code", typeof(string));

            var prospect_IDParameter = prospect_ID.HasValue ?
                new ObjectParameter("Prospect_ID", prospect_ID) :
                new ObjectParameter("Prospect_ID", typeof(long));

            var firstNameTHParameter = firstNameTH != null ?
                new ObjectParameter("FirstNameTH", firstNameTH) :
                new ObjectParameter("FirstNameTH", typeof(string));

            var lastNameTHParameter = lastNameTH != null ?
                new ObjectParameter("LastNameTH", lastNameTH) :
                new ObjectParameter("LastNameTH", typeof(string));

            var fullNameTHParameter = fullNameTH != null ?
                new ObjectParameter("FullNameTH", fullNameTH) :
                new ObjectParameter("FullNameTH", typeof(string));

            var firstNameENParameter = firstNameEN != null ?
                new ObjectParameter("FirstNameEN", firstNameEN) :
                new ObjectParameter("FirstNameEN", typeof(string));

            var lastNameENParameter = lastNameEN != null ?
                new ObjectParameter("LastNameEN", lastNameEN) :
                new ObjectParameter("LastNameEN", typeof(string));

            var fullNameENParameter = fullNameEN != null ?
                new ObjectParameter("FullNameEN", fullNameEN) :
                new ObjectParameter("FullNameEN", typeof(string));

            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));

            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));

            var inform_RemarkParameter = inform_Remark != null ?
                new ObjectParameter("Inform_Remark", inform_Remark) :
                new ObjectParameter("Inform_Remark", typeof(string));

            var inform_CustomerType_IDParameter = inform_CustomerType_ID.HasValue ?
                new ObjectParameter("Inform_CustomerType_ID", inform_CustomerType_ID) :
                new ObjectParameter("Inform_CustomerType_ID", typeof(long));

            var inform_CustomerNameParameter = inform_CustomerName != null ?
                new ObjectParameter("Inform_CustomerName", inform_CustomerName) :
                new ObjectParameter("Inform_CustomerName", typeof(string));

            var inform_CustomerTelParameter = inform_CustomerTel != null ?
                new ObjectParameter("Inform_CustomerTel", inform_CustomerTel) :
                new ObjectParameter("Inform_CustomerTel", typeof(string));

            var inform_CustomerEmailParameter = inform_CustomerEmail != null ?
                new ObjectParameter("Inform_CustomerEmail", inform_CustomerEmail) :
                new ObjectParameter("Inform_CustomerEmail", typeof(string));

            var receive_Appointment_DateParameter = receive_Appointment_Date.HasValue ?
                new ObjectParameter("Receive_Appointment_Date", receive_Appointment_Date) :
                new ObjectParameter("Receive_Appointment_Date", typeof(System.DateTime));

            var receive_Appointment_Time_FromParameter = receive_Appointment_Time_From.HasValue ?
                new ObjectParameter("Receive_Appointment_Time_From", receive_Appointment_Time_From) :
                new ObjectParameter("Receive_Appointment_Time_From", typeof(System.TimeSpan));

            var receive_Appointment_Time_ToParameter = receive_Appointment_Time_To.HasValue ?
                new ObjectParameter("Receive_Appointment_Time_To", receive_Appointment_Time_To) :
                new ObjectParameter("Receive_Appointment_Time_To", typeof(System.TimeSpan));

            var ddlOverAPDate_Reason_IDParameter = ddlOverAPDate_Reason_ID.HasValue ?
                new ObjectParameter("ddlOverAPDate_Reason_ID", ddlOverAPDate_Reason_ID) :
                new ObjectParameter("ddlOverAPDate_Reason_ID", typeof(int));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            var inform_User_IDParameter = inform_User_ID.HasValue ?
                new ObjectParameter("Inform_User_ID", inform_User_ID) :
                new ObjectParameter("Inform_User_ID", typeof(long));

            var flagUrgentParameter = flagUrgent.HasValue ?
                new ObjectParameter("flagUrgent", flagUrgent) :
                new ObjectParameter("flagUrgent", typeof(bool));

            var flagChinaParameter = flagChina.HasValue ?
                new ObjectParameter("flagChina", flagChina) :
                new ObjectParameter("flagChina", typeof(bool));

            var flagHSParameter = flagHS.HasValue ?
                new ObjectParameter("FlagHS", flagHS) :
                new ObjectParameter("FlagHS", typeof(bool));

            var icontact_userIDParameter = icontact_userID != null ?
                new ObjectParameter("Icontact_userID", icontact_userID) :
                new ObjectParameter("Icontact_userID", typeof(string));

            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_TD_Receive", tD_JobNo_IDParameter, project_IDParameter, project_CodeParameter, unit_IDParameter, unit_CodeParameter, prospect_IDParameter, firstNameTHParameter, lastNameTHParameter, fullNameTHParameter, firstNameENParameter, lastNameENParameter, fullNameENParameter, telephoneParameter, emailParameter, inform_RemarkParameter, inform_CustomerType_IDParameter, inform_CustomerNameParameter, inform_CustomerTelParameter, inform_CustomerEmailParameter, receive_Appointment_DateParameter, receive_Appointment_Time_FromParameter, receive_Appointment_Time_ToParameter, ddlOverAPDate_Reason_IDParameter, userParameter, inform_User_IDParameter, flagUrgentParameter, flagChinaParameter, flagHSParameter, icontact_userIDParameter, userIDParameter, tD_Receive_ID);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Receive_Result> HC_SP_Get_TD_Receive(Nullable<long> tD_Receive_ID)
        {
            var tD_Receive_IDParameter = tD_Receive_ID.HasValue ?
                new ObjectParameter("TD_Receive_ID", tD_Receive_ID) :
                new ObjectParameter("TD_Receive_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Receive_Result>("HC_SP_Get_TD_Receive", tD_Receive_IDParameter);
        }

        public virtual int HC_SP_Update_TD_Receive(Nullable<long> receive_ID, Nullable<long> receive_Status_ID, string receive_HC_Remark, string receive_CC_Remark, Nullable<long> receive_Confirm_Status_ID, string receive_Confirm_Remark, Nullable<System.DateTime> receive_Appointment_Date, Nullable<System.TimeSpan> receive_Appointment_Time_From, Nullable<System.TimeSpan> receive_Appointment_Time_To, Nullable<int> ddlOverAPDate_Reason_ID, Nullable<System.DateTime> receive_Appointment_Date_real, string user_Code, Nullable<long> user_ID)
        {
            var receive_IDParameter = receive_ID.HasValue ?
                new ObjectParameter("Receive_ID", receive_ID) :
                new ObjectParameter("Receive_ID", typeof(long));

            var receive_Status_IDParameter = receive_Status_ID.HasValue ?
                new ObjectParameter("Receive_Status_ID", receive_Status_ID) :
                new ObjectParameter("Receive_Status_ID", typeof(long));

            var receive_HC_RemarkParameter = receive_HC_Remark != null ?
                new ObjectParameter("Receive_HC_Remark", receive_HC_Remark) :
                new ObjectParameter("Receive_HC_Remark", typeof(string));

            var receive_CC_RemarkParameter = receive_CC_Remark != null ?
                new ObjectParameter("Receive_CC_Remark", receive_CC_Remark) :
                new ObjectParameter("Receive_CC_Remark", typeof(string));

            var receive_Confirm_Status_IDParameter = receive_Confirm_Status_ID.HasValue ?
                new ObjectParameter("Receive_Confirm_Status_ID", receive_Confirm_Status_ID) :
                new ObjectParameter("Receive_Confirm_Status_ID", typeof(long));

            var receive_Confirm_RemarkParameter = receive_Confirm_Remark != null ?
                new ObjectParameter("Receive_Confirm_Remark", receive_Confirm_Remark) :
                new ObjectParameter("Receive_Confirm_Remark", typeof(string));

            var receive_Appointment_DateParameter = receive_Appointment_Date.HasValue ?
                new ObjectParameter("Receive_Appointment_Date", receive_Appointment_Date) :
                new ObjectParameter("Receive_Appointment_Date", typeof(System.DateTime));

            var receive_Appointment_Time_FromParameter = receive_Appointment_Time_From.HasValue ?
                new ObjectParameter("Receive_Appointment_Time_From", receive_Appointment_Time_From) :
                new ObjectParameter("Receive_Appointment_Time_From", typeof(System.TimeSpan));

            var receive_Appointment_Time_ToParameter = receive_Appointment_Time_To.HasValue ?
                new ObjectParameter("Receive_Appointment_Time_To", receive_Appointment_Time_To) :
                new ObjectParameter("Receive_Appointment_Time_To", typeof(System.TimeSpan));

            var ddlOverAPDate_Reason_IDParameter = ddlOverAPDate_Reason_ID.HasValue ?
                new ObjectParameter("ddlOverAPDate_Reason_ID", ddlOverAPDate_Reason_ID) :
                new ObjectParameter("ddlOverAPDate_Reason_ID", typeof(int));

            var receive_Appointment_Date_realParameter = receive_Appointment_Date_real.HasValue ?
                new ObjectParameter("Receive_Appointment_Date_real", receive_Appointment_Date_real) :
                new ObjectParameter("Receive_Appointment_Date_real", typeof(System.DateTime));

            var user_CodeParameter = user_Code != null ?
                new ObjectParameter("User_Code", user_Code) :
                new ObjectParameter("User_Code", typeof(string));

            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_Receive", receive_IDParameter, receive_Status_IDParameter, receive_HC_RemarkParameter, receive_CC_RemarkParameter, receive_Confirm_Status_IDParameter, receive_Confirm_RemarkParameter, receive_Appointment_DateParameter, receive_Appointment_Time_FromParameter, receive_Appointment_Time_ToParameter, ddlOverAPDate_Reason_IDParameter, receive_Appointment_Date_realParameter, user_CodeParameter, user_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Guarantee_Result> HC_SP_Get_TD_Guarantee(Nullable<long> dOCUMENT_ID)
        {
            var dOCUMENT_IDParameter = dOCUMENT_ID.HasValue ?
                new ObjectParameter("DOCUMENT_ID", dOCUMENT_ID) :
                new ObjectParameter("DOCUMENT_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Guarantee_Result>("HC_SP_Get_TD_Guarantee", dOCUMENT_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_Search_Guarantee_Result> HC_SP_Get_Search_Guarantee(Nullable<long> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_Search_Guarantee_Result>("HC_SP_Get_Search_Guarantee", projectIDParameter);
        }

        public virtual ObjectResult<HC_SP_Insert_TD_Guarantee_Result> HC_SP_Insert_TD_Guarantee(Nullable<long> unitID, Nullable<int> extendDay, Nullable<int> extendMonth, Nullable<int> extendYear, string remark, string user)
        {
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(long));

            var extendDayParameter = extendDay.HasValue ?
                new ObjectParameter("ExtendDay", extendDay) :
                new ObjectParameter("ExtendDay", typeof(int));

            var extendMonthParameter = extendMonth.HasValue ?
                new ObjectParameter("ExtendMonth", extendMonth) :
                new ObjectParameter("ExtendMonth", typeof(int));

            var extendYearParameter = extendYear.HasValue ?
                new ObjectParameter("ExtendYear", extendYear) :
                new ObjectParameter("ExtendYear", typeof(int));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Insert_TD_Guarantee_Result>("HC_SP_Insert_TD_Guarantee", unitIDParameter, extendDayParameter, extendMonthParameter, extendYearParameter, remarkParameter, userParameter);
        }

        public virtual int HC_SP_Update_TD_Guarantee(Nullable<long> tD_Approve_ID, Nullable<bool> status, string role, string remark, string user)
        {
            var tD_Approve_IDParameter = tD_Approve_ID.HasValue ?
                new ObjectParameter("TD_Approve_ID", tD_Approve_ID) :
                new ObjectParameter("TD_Approve_ID", typeof(long));

            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));

            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_Guarantee", tD_Approve_IDParameter, statusParameter, roleParameter, remarkParameter, userParameter);
        }

        public virtual ObjectResult<string> HC_SP_Get_Email_Approve_Guarantee(Nullable<long> tD_Approve_ID, string projectCode, string role, string typeEmail, Nullable<int> typeBotton)
        {
            var tD_Approve_IDParameter = tD_Approve_ID.HasValue ?
                new ObjectParameter("TD_Approve_ID", tD_Approve_ID) :
                new ObjectParameter("TD_Approve_ID", typeof(long));

            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));

            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));

            var typeEmailParameter = typeEmail != null ?
                new ObjectParameter("TypeEmail", typeEmail) :
                new ObjectParameter("TypeEmail", typeof(string));

            var typeBottonParameter = typeBotton.HasValue ?
                new ObjectParameter("TypeBotton", typeBotton) :
                new ObjectParameter("TypeBotton", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Get_Email_Approve_Guarantee", tD_Approve_IDParameter, projectCodeParameter, roleParameter, typeEmailParameter, typeBottonParameter);
        }

        public virtual ObjectResult<HC_SP_EmailHC_Result> HC_SP_Get_EmailHC(Nullable<long> projectID, Nullable<int> userID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(long));

            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_EmailHC_Result>("HC_SP_Get_EmailHC", projectIDParameter, userIDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_Receive_Appointment_Result> HC_SP_Get_Receive_Appointment(Nullable<long> tD_Receive_ID)
        {
            var tD_Receive_IDParameter = tD_Receive_ID.HasValue ?
                new ObjectParameter("TD_Receive_ID", tD_Receive_ID) :
                new ObjectParameter("TD_Receive_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_Receive_Appointment_Result>("HC_SP_Get_Receive_Appointment", tD_Receive_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_ExtendReason_Result> HC_SP_Get_ExtendReason(Nullable<int> reasonType)
        {
            var reasonTypeParameter = reasonType.HasValue ?
                new ObjectParameter("ReasonType", reasonType) :
                new ObjectParameter("ReasonType", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_ExtendReason_Result>("HC_SP_Get_ExtendReason", reasonTypeParameter);
        }

        public virtual int HC_SP_Insert_Extended_Appointment(Nullable<long> tD_Receive_ID, Nullable<System.DateTime> receive_Appointment_Date, Nullable<System.TimeSpan> receive_Appointment_Time_From, Nullable<System.TimeSpan> receive_Appointment_Time_To, Nullable<int> extendedReasonID, string extendedRemark, string extendedRemarkCC, Nullable<bool> extendedApproveFlag, string createdBy)
        {
            var tD_Receive_IDParameter = tD_Receive_ID.HasValue ?
                new ObjectParameter("TD_Receive_ID", tD_Receive_ID) :
                new ObjectParameter("TD_Receive_ID", typeof(long));

            var receive_Appointment_DateParameter = receive_Appointment_Date.HasValue ?
                new ObjectParameter("Receive_Appointment_Date", receive_Appointment_Date) :
                new ObjectParameter("Receive_Appointment_Date", typeof(System.DateTime));

            var receive_Appointment_Time_FromParameter = receive_Appointment_Time_From.HasValue ?
                new ObjectParameter("Receive_Appointment_Time_From", receive_Appointment_Time_From) :
                new ObjectParameter("Receive_Appointment_Time_From", typeof(System.TimeSpan));

            var receive_Appointment_Time_ToParameter = receive_Appointment_Time_To.HasValue ?
                new ObjectParameter("Receive_Appointment_Time_To", receive_Appointment_Time_To) :
                new ObjectParameter("Receive_Appointment_Time_To", typeof(System.TimeSpan));

            var extendedReasonIDParameter = extendedReasonID.HasValue ?
                new ObjectParameter("ExtendedReasonID", extendedReasonID) :
                new ObjectParameter("ExtendedReasonID", typeof(int));

            var extendedRemarkParameter = extendedRemark != null ?
                new ObjectParameter("ExtendedRemark", extendedRemark) :
                new ObjectParameter("ExtendedRemark", typeof(string));

            var extendedRemarkCCParameter = extendedRemarkCC != null ?
                new ObjectParameter("ExtendedRemarkCC", extendedRemarkCC) :
                new ObjectParameter("ExtendedRemarkCC", typeof(string));

            var extendedApproveFlagParameter = extendedApproveFlag.HasValue ?
                new ObjectParameter("ExtendedApproveFlag", extendedApproveFlag) :
                new ObjectParameter("ExtendedApproveFlag", typeof(bool));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_Extended_Appointment", tD_Receive_IDParameter, receive_Appointment_DateParameter, receive_Appointment_Time_FromParameter, receive_Appointment_Time_ToParameter, extendedReasonIDParameter, extendedRemarkParameter, extendedRemarkCCParameter, extendedApproveFlagParameter, createdByParameter);
        }

        public virtual ObjectResult<HC_SP_Get_Worksheet_Repair_Result> HC_SP_Get_Worksheet_Repair(Nullable<long> workSheet_Item_ID)
        {
            var workSheet_Item_IDParameter = workSheet_Item_ID.HasValue ?
                new ObjectParameter("WorkSheet_Item_ID", workSheet_Item_ID) :
                new ObjectParameter("WorkSheet_Item_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_Worksheet_Repair_Result>("HC_SP_Get_Worksheet_Repair", workSheet_Item_IDParameter);
        }

        public virtual int HC_SP_Insert_Extended_Repair(Nullable<long> tD_WorkSheet_Item_ID, Nullable<System.DateTime> repairAppointmentDateFrom, Nullable<System.DateTime> repairAppointmentDateTo, Nullable<int> extendedReasonID, string extendedRemark, string extendedRemarkCC, Nullable<bool> extendedApproveFlag, string createdBy)
        {
            var tD_WorkSheet_Item_IDParameter = tD_WorkSheet_Item_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_Item_ID", tD_WorkSheet_Item_ID) :
                new ObjectParameter("TD_WorkSheet_Item_ID", typeof(long));

            var repairAppointmentDateFromParameter = repairAppointmentDateFrom.HasValue ?
                new ObjectParameter("RepairAppointmentDateFrom", repairAppointmentDateFrom) :
                new ObjectParameter("RepairAppointmentDateFrom", typeof(System.DateTime));

            var repairAppointmentDateToParameter = repairAppointmentDateTo.HasValue ?
                new ObjectParameter("RepairAppointmentDateTo", repairAppointmentDateTo) :
                new ObjectParameter("RepairAppointmentDateTo", typeof(System.DateTime));

            var extendedReasonIDParameter = extendedReasonID.HasValue ?
                new ObjectParameter("ExtendedReasonID", extendedReasonID) :
                new ObjectParameter("ExtendedReasonID", typeof(int));

            var extendedRemarkParameter = extendedRemark != null ?
                new ObjectParameter("ExtendedRemark", extendedRemark) :
                new ObjectParameter("ExtendedRemark", typeof(string));

            var extendedRemarkCCParameter = extendedRemarkCC != null ?
                new ObjectParameter("ExtendedRemarkCC", extendedRemarkCC) :
                new ObjectParameter("ExtendedRemarkCC", typeof(string));

            var extendedApproveFlagParameter = extendedApproveFlag.HasValue ?
                new ObjectParameter("ExtendedApproveFlag", extendedApproveFlag) :
                new ObjectParameter("ExtendedApproveFlag", typeof(bool));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_Extended_Repair", tD_WorkSheet_Item_IDParameter, repairAppointmentDateFromParameter, repairAppointmentDateToParameter, extendedReasonIDParameter, extendedRemarkParameter, extendedRemarkCCParameter, extendedApproveFlagParameter, createdByParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_SpacialMemo(Nullable<long> worksheet_ID)
        {
            var worksheet_IDParameter = worksheet_ID.HasValue ?
                new ObjectParameter("Worksheet_ID", worksheet_ID) :
                new ObjectParameter("Worksheet_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_SpacialMemo", worksheet_IDParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_ChangeAppointment(Nullable<long> job_ID, string job_Code)
        {
            var job_IDParameter = job_ID.HasValue ?
                new ObjectParameter("Job_ID", job_ID) :
                new ObjectParameter("Job_ID", typeof(long));

            var job_CodeParameter = job_Code != null ?
                new ObjectParameter("Job_Code", job_Code) :
                new ObjectParameter("Job_Code", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_ChangeAppointment", job_IDParameter, job_CodeParameter);
        }

        public virtual int HC_SP_Insert_TD_Activity(string activityCode, Nullable<long> prospect_id, Nullable<long> project_id, string user, Nullable<long> ref_Activity_id)
        {
            var activityCodeParameter = activityCode != null ?
                new ObjectParameter("activityCode", activityCode) :
                new ObjectParameter("activityCode", typeof(string));

            var prospect_idParameter = prospect_id.HasValue ?
                new ObjectParameter("Prospect_id", prospect_id) :
                new ObjectParameter("Prospect_id", typeof(long));

            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("Project_id", project_id) :
                new ObjectParameter("Project_id", typeof(long));

            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));

            var ref_Activity_idParameter = ref_Activity_id.HasValue ?
                new ObjectParameter("Ref_Activity_id", ref_Activity_id) :
                new ObjectParameter("Ref_Activity_id", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_TD_Activity", activityCodeParameter, prospect_idParameter, project_idParameter, userParameter, ref_Activity_idParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Extended_Appointment_History_Result> HC_SP_Get_TD_Extended_Appointment_History(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Extended_Appointment_History_Result>("HC_SP_Get_TD_Extended_Appointment_History", iDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Extended_Repair_History_Result> HC_SP_Get_TD_Extended_Repair_History(Nullable<long> tD_WorkSheet_Item_ID)
        {
            var tD_WorkSheet_Item_IDParameter = tD_WorkSheet_Item_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_Item_ID", tD_WorkSheet_Item_ID) :
                new ObjectParameter("TD_WorkSheet_Item_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Extended_Repair_History_Result>("HC_SP_Get_TD_Extended_Repair_History", tD_WorkSheet_Item_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_ProjectDetail_Result> HC_SP_Get_ProjectDetail(string projectCode)
        {
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_ProjectDetail_Result>("HC_SP_Get_ProjectDetail", projectCodeParameter);
        }

        public virtual int HC_SP_Change_WorkSheetApproveStatus(string workSheetJobNo, string user)
        {
            var workSheetJobNoParameter = workSheetJobNo != null ?
                new ObjectParameter("WorkSheetJobNo", workSheetJobNo) :
                new ObjectParameter("WorkSheetJobNo", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Change_WorkSheetApproveStatus", workSheetJobNoParameter, userParameter);
        }

        public virtual int HC_SP_Change_WorkSheetStatus(string workSheetJobNo, string user)
        {
            var workSheetJobNoParameter = workSheetJobNo != null ?
                new ObjectParameter("WorkSheetJobNo", workSheetJobNo) :
                new ObjectParameter("WorkSheetJobNo", typeof(string));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Change_WorkSheetStatus", workSheetJobNoParameter, userParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_ChangeWorksheetApproveStatus(string workSheetJobNo)
        {
            var workSheetJobNoParameter = workSheetJobNo != null ?
                new ObjectParameter("WorkSheetJobNo", workSheetJobNo) :
                new ObjectParameter("WorkSheetJobNo", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_ChangeWorksheetApproveStatus", workSheetJobNoParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_ChangeWorksheetStatus(string workSheetJobNo)
        {
            var workSheetJobNoParameter = workSheetJobNo != null ?
                new ObjectParameter("WorkSheetJobNo", workSheetJobNo) :
                new ObjectParameter("WorkSheetJobNo", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_ChangeWorksheetStatus", workSheetJobNoParameter);
        }

        public virtual ObjectResult<string> HC_SP_Check_ChangeAppointmentRepairAfter(Nullable<long> job_ID, string job_Code)
        {
            var job_IDParameter = job_ID.HasValue ?
                new ObjectParameter("Job_ID", job_ID) :
                new ObjectParameter("Job_ID", typeof(long));

            var job_CodeParameter = job_Code != null ?
                new ObjectParameter("Job_Code", job_Code) :
                new ObjectParameter("Job_Code", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Check_ChangeAppointmentRepairAfter", job_IDParameter, job_CodeParameter);
        }

        public virtual ObjectResult<HC_SP_Get_Worksheet_RepairAfter_Result> HC_SP_Get_Worksheet_RepairAfter(Nullable<long> workSheet_Item_ID)
        {
            var workSheet_Item_IDParameter = workSheet_Item_ID.HasValue ?
                new ObjectParameter("WorkSheet_Item_ID", workSheet_Item_ID) :
                new ObjectParameter("WorkSheet_Item_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_Worksheet_RepairAfter_Result>("HC_SP_Get_Worksheet_RepairAfter", workSheet_Item_IDParameter);
        }

        public virtual int HC_SP_Insert_Extended_RepairAfter(Nullable<long> tD_WorkSheet_Item_ID, Nullable<int> repairAppointmentTimes, Nullable<System.DateTime> repairAppointmentDate_Old, Nullable<System.DateTime> repairAppointmentDate, Nullable<System.DateTime> expectDate_Old, Nullable<System.DateTime> expectDate, Nullable<int> extendedReasonID, string extendedRemark, Nullable<long> extendedUserID, string extendedUserCode, Nullable<bool> extendedApproveFlag, string extendedRemarkCC, Nullable<long> extendedUserIDCC, string extendedUserCodeCC, string createdBy)
        {
            var tD_WorkSheet_Item_IDParameter = tD_WorkSheet_Item_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_Item_ID", tD_WorkSheet_Item_ID) :
                new ObjectParameter("TD_WorkSheet_Item_ID", typeof(long));

            var repairAppointmentTimesParameter = repairAppointmentTimes.HasValue ?
                new ObjectParameter("RepairAppointmentTimes", repairAppointmentTimes) :
                new ObjectParameter("RepairAppointmentTimes", typeof(int));

            var repairAppointmentDate_OldParameter = repairAppointmentDate_Old.HasValue ?
                new ObjectParameter("RepairAppointmentDate_Old", repairAppointmentDate_Old) :
                new ObjectParameter("RepairAppointmentDate_Old", typeof(System.DateTime));

            var repairAppointmentDateParameter = repairAppointmentDate.HasValue ?
                new ObjectParameter("RepairAppointmentDate", repairAppointmentDate) :
                new ObjectParameter("RepairAppointmentDate", typeof(System.DateTime));

            var expectDate_OldParameter = expectDate_Old.HasValue ?
                new ObjectParameter("ExpectDate_Old", expectDate_Old) :
                new ObjectParameter("ExpectDate_Old", typeof(System.DateTime));

            var expectDateParameter = expectDate.HasValue ?
                new ObjectParameter("ExpectDate", expectDate) :
                new ObjectParameter("ExpectDate", typeof(System.DateTime));

            var extendedReasonIDParameter = extendedReasonID.HasValue ?
                new ObjectParameter("ExtendedReasonID", extendedReasonID) :
                new ObjectParameter("ExtendedReasonID", typeof(int));

            var extendedRemarkParameter = extendedRemark != null ?
                new ObjectParameter("ExtendedRemark", extendedRemark) :
                new ObjectParameter("ExtendedRemark", typeof(string));

            var extendedUserIDParameter = extendedUserID.HasValue ?
                new ObjectParameter("ExtendedUserID", extendedUserID) :
                new ObjectParameter("ExtendedUserID", typeof(long));

            var extendedUserCodeParameter = extendedUserCode != null ?
                new ObjectParameter("ExtendedUserCode", extendedUserCode) :
                new ObjectParameter("ExtendedUserCode", typeof(string));

            var extendedApproveFlagParameter = extendedApproveFlag.HasValue ?
                new ObjectParameter("ExtendedApproveFlag", extendedApproveFlag) :
                new ObjectParameter("ExtendedApproveFlag", typeof(bool));

            var extendedRemarkCCParameter = extendedRemarkCC != null ?
                new ObjectParameter("ExtendedRemarkCC", extendedRemarkCC) :
                new ObjectParameter("ExtendedRemarkCC", typeof(string));

            var extendedUserIDCCParameter = extendedUserIDCC.HasValue ?
                new ObjectParameter("ExtendedUserIDCC", extendedUserIDCC) :
                new ObjectParameter("ExtendedUserIDCC", typeof(long));

            var extendedUserCodeCCParameter = extendedUserCodeCC != null ?
                new ObjectParameter("ExtendedUserCodeCC", extendedUserCodeCC) :
                new ObjectParameter("ExtendedUserCodeCC", typeof(string));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_Extended_RepairAfter", tD_WorkSheet_Item_IDParameter, repairAppointmentTimesParameter, repairAppointmentDate_OldParameter, repairAppointmentDateParameter, expectDate_OldParameter, expectDateParameter, extendedReasonIDParameter, extendedRemarkParameter, extendedUserIDParameter, extendedUserCodeParameter, extendedApproveFlagParameter, extendedRemarkCCParameter, extendedUserIDCCParameter, extendedUserCodeCCParameter, createdByParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TrackerByReceive_Result> HC_SP_Get_TrackerByReceive(string projectList, string unitType, Nullable<long> mainProcessID, Nullable<System.DateTime> workSheet_DateFrom, Nullable<System.DateTime> workSheet_DateTo, string jobType)
        {
            var projectListParameter = projectList != null ?
                new ObjectParameter("ProjectList", projectList) :
                new ObjectParameter("ProjectList", typeof(string));

            var unitTypeParameter = unitType != null ?
                new ObjectParameter("UnitType", unitType) :
                new ObjectParameter("UnitType", typeof(string));

            var mainProcessIDParameter = mainProcessID.HasValue ?
                new ObjectParameter("MainProcessID", mainProcessID) :
                new ObjectParameter("MainProcessID", typeof(long));

            var workSheet_DateFromParameter = workSheet_DateFrom.HasValue ?
                new ObjectParameter("WorkSheet_DateFrom", workSheet_DateFrom) :
                new ObjectParameter("WorkSheet_DateFrom", typeof(System.DateTime));

            var workSheet_DateToParameter = workSheet_DateTo.HasValue ?
                new ObjectParameter("WorkSheet_DateTo", workSheet_DateTo) :
                new ObjectParameter("WorkSheet_DateTo", typeof(System.DateTime));

            var jobTypeParameter = jobType != null ?
                new ObjectParameter("JobType", jobType) :
                new ObjectParameter("JobType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TrackerByReceive_Result>("HC_SP_Get_TrackerByReceive", projectListParameter, unitTypeParameter, mainProcessIDParameter, workSheet_DateFromParameter, workSheet_DateToParameter, jobTypeParameter);
        }

        public virtual ObjectResult<TK_SP_Get_Customer_Info_By_Unit_Result> TK_SP_Get_Customer_Info_By_Unit(Nullable<long> unitID)
        {
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TK_SP_Get_Customer_Info_By_Unit_Result>("TK_SP_Get_Customer_Info_By_Unit", unitIDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Receive_Item_Detail_Result> HC_SP_Get_TD_Receive_Item_Detail(Nullable<long> receive_Item_ID)
        {
            var receive_Item_IDParameter = receive_Item_ID.HasValue ?
                new ObjectParameter("Receive_Item_ID", receive_Item_ID) :
                new ObjectParameter("Receive_Item_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Receive_Item_Detail_Result>("HC_SP_Get_TD_Receive_Item_Detail", receive_Item_IDParameter);
        }

        public virtual int HC_SP_Update_TD_Receive_Item_Detail(Nullable<long> receive_Item_ID, Nullable<long> iD, Nullable<int> no, Nullable<int> status_ID, Nullable<long> vendor_ID, string vendor_Name, Nullable<int> jobTypeID, Nullable<System.DateTime> repairAppointmentDateFrom, Nullable<System.DateTime> repairAppointmentDateTo, Nullable<int> reasonID, Nullable<long> price_ID, string remark, string user_Code, Nullable<long> user_ID)
        {
            var receive_Item_IDParameter = receive_Item_ID.HasValue ?
                new ObjectParameter("Receive_Item_ID", receive_Item_ID) :
                new ObjectParameter("Receive_Item_ID", typeof(long));

            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));

            var noParameter = no.HasValue ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(int));

            var status_IDParameter = status_ID.HasValue ?
                new ObjectParameter("Status_ID", status_ID) :
                new ObjectParameter("Status_ID", typeof(int));

            var vendor_IDParameter = vendor_ID.HasValue ?
                new ObjectParameter("Vendor_ID", vendor_ID) :
                new ObjectParameter("Vendor_ID", typeof(long));

            var vendor_NameParameter = vendor_Name != null ?
                new ObjectParameter("Vendor_Name", vendor_Name) :
                new ObjectParameter("Vendor_Name", typeof(string));

            var jobTypeIDParameter = jobTypeID.HasValue ?
                new ObjectParameter("JobTypeID", jobTypeID) :
                new ObjectParameter("JobTypeID", typeof(int));

            var repairAppointmentDateFromParameter = repairAppointmentDateFrom.HasValue ?
                new ObjectParameter("RepairAppointmentDateFrom", repairAppointmentDateFrom) :
                new ObjectParameter("RepairAppointmentDateFrom", typeof(System.DateTime));

            var repairAppointmentDateToParameter = repairAppointmentDateTo.HasValue ?
                new ObjectParameter("RepairAppointmentDateTo", repairAppointmentDateTo) :
                new ObjectParameter("RepairAppointmentDateTo", typeof(System.DateTime));

            var reasonIDParameter = reasonID.HasValue ?
                new ObjectParameter("ReasonID", reasonID) :
                new ObjectParameter("ReasonID", typeof(int));

            var price_IDParameter = price_ID.HasValue ?
                new ObjectParameter("Price_ID", price_ID) :
                new ObjectParameter("Price_ID", typeof(long));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var user_CodeParameter = user_Code != null ?
                new ObjectParameter("User_Code", user_Code) :
                new ObjectParameter("User_Code", typeof(string));

            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_Receive_Item_Detail", receive_Item_IDParameter, iDParameter, noParameter, status_IDParameter, vendor_IDParameter, vendor_NameParameter, jobTypeIDParameter, repairAppointmentDateFromParameter, repairAppointmentDateToParameter, reasonIDParameter, price_IDParameter, remarkParameter, user_CodeParameter, user_IDParameter);
        }

        public virtual int HC_SP_Update_TD_Receive_Item_Modal(Nullable<long> receive_Item_ID, Nullable<int> specL1_ID, Nullable<int> specL2_ID, Nullable<int> specL3_ID, Nullable<int> location_ID, Nullable<int> cause_ID, Nullable<bool> duplicateFixid, string user_Code)
        {
            var receive_Item_IDParameter = receive_Item_ID.HasValue ?
                new ObjectParameter("Receive_Item_ID", receive_Item_ID) :
                new ObjectParameter("Receive_Item_ID", typeof(long));

            var specL1_IDParameter = specL1_ID.HasValue ?
                new ObjectParameter("SpecL1_ID", specL1_ID) :
                new ObjectParameter("SpecL1_ID", typeof(int));

            var specL2_IDParameter = specL2_ID.HasValue ?
                new ObjectParameter("SpecL2_ID", specL2_ID) :
                new ObjectParameter("SpecL2_ID", typeof(int));

            var specL3_IDParameter = specL3_ID.HasValue ?
                new ObjectParameter("SpecL3_ID", specL3_ID) :
                new ObjectParameter("SpecL3_ID", typeof(int));

            var location_IDParameter = location_ID.HasValue ?
                new ObjectParameter("Location_ID", location_ID) :
                new ObjectParameter("Location_ID", typeof(int));

            var cause_IDParameter = cause_ID.HasValue ?
                new ObjectParameter("Cause_ID", cause_ID) :
                new ObjectParameter("Cause_ID", typeof(int));

            var duplicateFixidParameter = duplicateFixid.HasValue ?
                new ObjectParameter("DuplicateFixid", duplicateFixid) :
                new ObjectParameter("DuplicateFixid", typeof(bool));

            var user_CodeParameter = user_Code != null ?
                new ObjectParameter("User_Code", user_Code) :
                new ObjectParameter("User_Code", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_Receive_Item_Modal", receive_Item_IDParameter, specL1_IDParameter, specL2_IDParameter, specL3_IDParameter, location_IDParameter, cause_IDParameter, duplicateFixidParameter, user_CodeParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_WorkSheet_Result> HC_SP_Get_TD_WorkSheet(Nullable<long> worksheet_ID)
        {
            var worksheet_IDParameter = worksheet_ID.HasValue ?
                new ObjectParameter("Worksheet_ID", worksheet_ID) :
                new ObjectParameter("Worksheet_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_WorkSheet_Result>("HC_SP_Get_TD_WorkSheet", worksheet_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_WorkSheet_Item_Result> HC_SP_Get_TD_WorkSheet_Item(Nullable<long> tD_WorkSheet_ID)
        {
            var tD_WorkSheet_IDParameter = tD_WorkSheet_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_ID", tD_WorkSheet_ID) :
                new ObjectParameter("TD_WorkSheet_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_WorkSheet_Item_Result>("HC_SP_Get_TD_WorkSheet_Item", tD_WorkSheet_IDParameter);
        }

        public virtual ObjectResult<Nullable<long>> HC_SP_Insert_TD_WorkSheet(Nullable<long> receive_ID, string user, Nullable<long> userID)
        {
            var receive_IDParameter = receive_ID.HasValue ?
                new ObjectParameter("Receive_ID", receive_ID) :
                new ObjectParameter("Receive_ID", typeof(long));

            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));

            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("HC_SP_Insert_TD_WorkSheet", receive_IDParameter, userParameter, userIDParameter);
        }

        public virtual int HC_SP_Insert_TD_WorkSheet_Item_Detail(Nullable<long> workSheet_Item_Detail_ID, Nullable<long> tD_WorkSheet_Item_ID, Nullable<int> order, Nullable<int> list1_ID, Nullable<int> list2_ID, Nullable<int> list3_ID, Nullable<int> list4_ID, Nullable<decimal> special_Materia, Nullable<decimal> special_WagePrice, Nullable<int> priceMaterialType, Nullable<int> priceWageType, Nullable<decimal> quantity, string remark, string createBy)
        {
            var workSheet_Item_Detail_IDParameter = workSheet_Item_Detail_ID.HasValue ?
                new ObjectParameter("WorkSheet_Item_Detail_ID", workSheet_Item_Detail_ID) :
                new ObjectParameter("WorkSheet_Item_Detail_ID", typeof(long));

            var tD_WorkSheet_Item_IDParameter = tD_WorkSheet_Item_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_Item_ID", tD_WorkSheet_Item_ID) :
                new ObjectParameter("TD_WorkSheet_Item_ID", typeof(long));

            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));

            var list1_IDParameter = list1_ID.HasValue ?
                new ObjectParameter("List1_ID", list1_ID) :
                new ObjectParameter("List1_ID", typeof(int));

            var list2_IDParameter = list2_ID.HasValue ?
                new ObjectParameter("List2_ID", list2_ID) :
                new ObjectParameter("List2_ID", typeof(int));

            var list3_IDParameter = list3_ID.HasValue ?
                new ObjectParameter("List3_ID", list3_ID) :
                new ObjectParameter("List3_ID", typeof(int));

            var list4_IDParameter = list4_ID.HasValue ?
                new ObjectParameter("List4_ID", list4_ID) :
                new ObjectParameter("List4_ID", typeof(int));

            var special_MateriaParameter = special_Materia.HasValue ?
                new ObjectParameter("Special_Materia", special_Materia) :
                new ObjectParameter("Special_Materia", typeof(decimal));

            var special_WagePriceParameter = special_WagePrice.HasValue ?
                new ObjectParameter("Special_WagePrice", special_WagePrice) :
                new ObjectParameter("Special_WagePrice", typeof(decimal));

            var priceMaterialTypeParameter = priceMaterialType.HasValue ?
                new ObjectParameter("PriceMaterialType", priceMaterialType) :
                new ObjectParameter("PriceMaterialType", typeof(int));

            var priceWageTypeParameter = priceWageType.HasValue ?
                new ObjectParameter("PriceWageType", priceWageType) :
                new ObjectParameter("PriceWageType", typeof(int));

            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var createByParameter = createBy != null ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Insert_TD_WorkSheet_Item_Detail", workSheet_Item_Detail_IDParameter, tD_WorkSheet_Item_IDParameter, orderParameter, list1_IDParameter, list2_IDParameter, list3_IDParameter, list4_IDParameter, special_MateriaParameter, special_WagePriceParameter, priceMaterialTypeParameter, priceWageTypeParameter, quantityParameter, remarkParameter, createByParameter);
        }

        public virtual int HC_SP_Update_TD_WorkSheet(Nullable<long> workSheet_ID, Nullable<System.DateTime> closeJob_Date, Nullable<long> vendor_ID, string vendor_Name, string vendorChangeRemark, Nullable<System.DateTime> workSheet_RepairAppointmentFromDate, Nullable<System.DateTime> workSheet_RepairAppointmentToDate, Nullable<double> operating_Percent, Nullable<double> vat_Percent, string paymentType, Nullable<int> paymentType_ID, string user)
        {
            var workSheet_IDParameter = workSheet_ID.HasValue ?
                new ObjectParameter("WorkSheet_ID", workSheet_ID) :
                new ObjectParameter("WorkSheet_ID", typeof(long));

            var closeJob_DateParameter = closeJob_Date.HasValue ?
                new ObjectParameter("CloseJob_Date", closeJob_Date) :
                new ObjectParameter("CloseJob_Date", typeof(System.DateTime));

            var vendor_IDParameter = vendor_ID.HasValue ?
                new ObjectParameter("Vendor_ID", vendor_ID) :
                new ObjectParameter("Vendor_ID", typeof(long));

            var vendor_NameParameter = vendor_Name != null ?
                new ObjectParameter("Vendor_Name", vendor_Name) :
                new ObjectParameter("Vendor_Name", typeof(string));

            var vendorChangeRemarkParameter = vendorChangeRemark != null ?
                new ObjectParameter("VendorChangeRemark", vendorChangeRemark) :
                new ObjectParameter("VendorChangeRemark", typeof(string));

            var workSheet_RepairAppointmentFromDateParameter = workSheet_RepairAppointmentFromDate.HasValue ?
                new ObjectParameter("WorkSheet_RepairAppointmentFromDate", workSheet_RepairAppointmentFromDate) :
                new ObjectParameter("WorkSheet_RepairAppointmentFromDate", typeof(System.DateTime));

            var workSheet_RepairAppointmentToDateParameter = workSheet_RepairAppointmentToDate.HasValue ?
                new ObjectParameter("WorkSheet_RepairAppointmentToDate", workSheet_RepairAppointmentToDate) :
                new ObjectParameter("WorkSheet_RepairAppointmentToDate", typeof(System.DateTime));

            var operating_PercentParameter = operating_Percent.HasValue ?
                new ObjectParameter("Operating_Percent", operating_Percent) :
                new ObjectParameter("Operating_Percent", typeof(double));

            var vat_PercentParameter = vat_Percent.HasValue ?
                new ObjectParameter("Vat_Percent", vat_Percent) :
                new ObjectParameter("Vat_Percent", typeof(double));

            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));

            var paymentType_IDParameter = paymentType_ID.HasValue ?
                new ObjectParameter("PaymentType_ID", paymentType_ID) :
                new ObjectParameter("PaymentType_ID", typeof(int));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_WorkSheet", workSheet_IDParameter, closeJob_DateParameter, vendor_IDParameter, vendor_NameParameter, vendorChangeRemarkParameter, workSheet_RepairAppointmentFromDateParameter, workSheet_RepairAppointmentToDateParameter, operating_PercentParameter, vat_PercentParameter, paymentTypeParameter, paymentType_IDParameter, userParameter);
        }

        public virtual ObjectResult<string> HC_SP_Update_TD_WorkSheet_Item_Detail(Nullable<long> workSheet_Item_Detail_ID, Nullable<long> tD_WorkSheet_Item_ID, string updateBy)
        {
            var workSheet_Item_Detail_IDParameter = workSheet_Item_Detail_ID.HasValue ?
                new ObjectParameter("WorkSheet_Item_Detail_ID", workSheet_Item_Detail_ID) :
                new ObjectParameter("WorkSheet_Item_Detail_ID", typeof(long));

            var tD_WorkSheet_Item_IDParameter = tD_WorkSheet_Item_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_Item_ID", tD_WorkSheet_Item_ID) :
                new ObjectParameter("TD_WorkSheet_Item_ID", typeof(long));

            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HC_SP_Update_TD_WorkSheet_Item_Detail", workSheet_Item_Detail_IDParameter, tD_WorkSheet_Item_IDParameter, updateByParameter);
        }

        public virtual int HC_SP_Update_TD_WorkSheet_Item(Nullable<long> workSheet_ID, Nullable<long> workSheet_Item_ID, Nullable<int> status, string cause_text, Nullable<System.DateTime> confirm_Price_Date, Nullable<System.DateTime> startDate, Nullable<System.DateTime> finishDate, string user)
        {
            var workSheet_IDParameter = workSheet_ID.HasValue ?
                new ObjectParameter("WorkSheet_ID", workSheet_ID) :
                new ObjectParameter("WorkSheet_ID", typeof(long));

            var workSheet_Item_IDParameter = workSheet_Item_ID.HasValue ?
                new ObjectParameter("WorkSheet_Item_ID", workSheet_Item_ID) :
                new ObjectParameter("WorkSheet_Item_ID", typeof(long));

            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));

            var cause_textParameter = cause_text != null ?
                new ObjectParameter("Cause_text", cause_text) :
                new ObjectParameter("Cause_text", typeof(string));

            var confirm_Price_DateParameter = confirm_Price_Date.HasValue ?
                new ObjectParameter("Confirm_Price_Date", confirm_Price_Date) :
                new ObjectParameter("Confirm_Price_Date", typeof(System.DateTime));

            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var finishDateParameter = finishDate.HasValue ?
                new ObjectParameter("FinishDate", finishDate) :
                new ObjectParameter("FinishDate", typeof(System.DateTime));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_Update_TD_WorkSheet_Item", workSheet_IDParameter, workSheet_Item_IDParameter, statusParameter, cause_textParameter, confirm_Price_DateParameter, startDateParameter, finishDateParameter, userParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TM_Payment_Type_Result> HC_SP_Get_TM_Payment_Type(string payment_Type, Nullable<bool> warrantyExpired)
        {
            var payment_TypeParameter = payment_Type != null ?
                new ObjectParameter("Payment_Type", payment_Type) :
                new ObjectParameter("Payment_Type", typeof(string));

            var warrantyExpiredParameter = warrantyExpired.HasValue ?
                new ObjectParameter("WarrantyExpired", warrantyExpired) :
                new ObjectParameter("WarrantyExpired", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TM_Payment_Type_Result>("HC_SP_Get_TM_Payment_Type", payment_TypeParameter, warrantyExpiredParameter);
        }

        public virtual ObjectResult<HC_SP_Get_V_Receive_Item_Detail_Result> HC_SP_Get_V_Receive_Item_Detail(Nullable<long> workSheetID)
        {
            var workSheetIDParameter = workSheetID.HasValue ?
                new ObjectParameter("WorkSheetID", workSheetID) :
                new ObjectParameter("WorkSheetID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_V_Receive_Item_Detail_Result>("HC_SP_Get_V_Receive_Item_Detail", workSheetIDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_WorkSheet_Item_Detail_Result> HC_SP_Get_TD_WorkSheet_Item_Detail(Nullable<long> tD_WorkSheet_Item_ID)
        {
            var tD_WorkSheet_Item_IDParameter = tD_WorkSheet_Item_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_Item_ID", tD_WorkSheet_Item_ID) :
                new ObjectParameter("TD_WorkSheet_Item_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_WorkSheet_Item_Detail_Result>("HC_SP_Get_TD_WorkSheet_Item_Detail", tD_WorkSheet_Item_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TD_Approve_Item_Detail_Result> HC_SP_Get_TD_Approve_Item_Detail(Nullable<long> tD_WorkSheet_ID)
        {
            var tD_WorkSheet_IDParameter = tD_WorkSheet_ID.HasValue ?
                new ObjectParameter("TD_WorkSheet_ID", tD_WorkSheet_ID) :
                new ObjectParameter("TD_WorkSheet_ID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TD_Approve_Item_Detail_Result>("HC_SP_Get_TD_Approve_Item_Detail", tD_WorkSheet_IDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TrackerByWorkSheet_Result> HC_SP_Get_TrackerByWorkSheet(string projectList, string status, string payment, string dateFrom, string dateTo, string jobType, Nullable<int> limit, Nullable<int> offset)
        {
            var projectListParameter = projectList != null ?
                new ObjectParameter("ProjectList", projectList) :
                new ObjectParameter("ProjectList", typeof(string));

            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));

            var paymentParameter = payment != null ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(string));

            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));

            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));

            var jobTypeParameter = jobType != null ?
                new ObjectParameter("JobType", jobType) :
                new ObjectParameter("JobType", typeof(string));

            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));

            var offsetParameter = offset.HasValue ?
                new ObjectParameter("Offset", offset) :
                new ObjectParameter("Offset", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TrackerByWorkSheet_Result>("HC_SP_Get_TrackerByWorkSheet", projectListParameter, statusParameter, paymentParameter, dateFromParameter, dateToParameter, jobTypeParameter, limitParameter, offsetParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TrackerByWorkSheet_Kpi_Result> HC_SP_Get_TrackerByWorkSheet_Kpi(string projectList, string unitType, Nullable<long> mainProcessID, string paymentType, Nullable<long> vendorID, Nullable<System.DateTime> workSheet_DateFrom, Nullable<System.DateTime> workSheet_DateTo, string jobType)
        {
            var projectListParameter = projectList != null ?
                new ObjectParameter("ProjectList", projectList) :
                new ObjectParameter("ProjectList", typeof(string));

            var unitTypeParameter = unitType != null ?
                new ObjectParameter("UnitType", unitType) :
                new ObjectParameter("UnitType", typeof(string));

            var mainProcessIDParameter = mainProcessID.HasValue ?
                new ObjectParameter("MainProcessID", mainProcessID) :
                new ObjectParameter("MainProcessID", typeof(long));

            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));

            var workSheet_DateFromParameter = workSheet_DateFrom.HasValue ?
                new ObjectParameter("WorkSheet_DateFrom", workSheet_DateFrom) :
                new ObjectParameter("WorkSheet_DateFrom", typeof(System.DateTime));

            var workSheet_DateToParameter = workSheet_DateTo.HasValue ?
                new ObjectParameter("WorkSheet_DateTo", workSheet_DateTo) :
                new ObjectParameter("WorkSheet_DateTo", typeof(System.DateTime));

            var jobTypeParameter = jobType != null ?
                new ObjectParameter("JobType", jobType) :
                new ObjectParameter("JobType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TrackerByWorkSheet_Kpi_Result>("HC_SP_Get_TrackerByWorkSheet_Kpi", projectListParameter, unitTypeParameter, mainProcessIDParameter, paymentTypeParameter, vendorIDParameter, workSheet_DateFromParameter, workSheet_DateToParameter, jobTypeParameter);
        }

        public virtual ObjectResult<TK_SP_Get_Address_Result> TK_SP_Get_Address(Nullable<long> prospect_id)
        {
            var prospect_idParameter = prospect_id.HasValue ?
                new ObjectParameter("Prospect_id", prospect_id) :
                new ObjectParameter("Prospect_id", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TK_SP_Get_Address_Result>("TK_SP_Get_Address", prospect_idParameter);
        }

        public virtual ObjectResult<string> TK_SP_Get_CheckProspectVipStatus(Nullable<long> prospectID)
        {
            var prospectIDParameter = prospectID.HasValue ?
                new ObjectParameter("ProspectID", prospectID) :
                new ObjectParameter("ProspectID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TK_SP_Get_CheckProspectVipStatus", prospectIDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_RW_Search_Result> HC_SP_Get_RW_Search(Nullable<long> project_ID, Nullable<long> unit_ID, Nullable<long> vendorID)
        {
            var project_IDParameter = project_ID.HasValue ?
                new ObjectParameter("Project_ID", project_ID) :
                new ObjectParameter("Project_ID", typeof(long));

            var unit_IDParameter = unit_ID.HasValue ?
                new ObjectParameter("Unit_ID", unit_ID) :
                new ObjectParameter("Unit_ID", typeof(long));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_RW_Search_Result>("HC_SP_Get_RW_Search", project_IDParameter, unit_IDParameter, vendorIDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_RW_Search_Noti_Result> HC_SP_Get_RW_Search_Noti(Nullable<long> userID, Nullable<long> vendorID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));

            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_RW_Search_Noti_Result>("HC_SP_Get_RW_Search_Noti", userIDParameter, vendorIDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_Canlendar_Result> HC_SP_Get_Canlendar(Nullable<int> userID, Nullable<int> projectID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));

            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_Canlendar_Result>("HC_SP_Get_Canlendar", userIDParameter, projectIDParameter);
        }

        public virtual ObjectResult<HC_SP_Get_TrackerByWorkSheet_Ques_Result> HC_SP_Get_TrackerByWorkSheet_Ques(string projectList, string unitCode, string questionStatus, Nullable<System.DateTime> workSheet_DateFrom, Nullable<System.DateTime> workSheet_DateTo, Nullable<System.DateTime> workSheet_CloseDateFrom, Nullable<System.DateTime> workSheet_CloseDateTo, Nullable<int> evaluate_Media, string jobType)
        {
            var projectListParameter = projectList != null ?
                new ObjectParameter("ProjectList", projectList) :
                new ObjectParameter("ProjectList", typeof(string));

            var unitCodeParameter = unitCode != null ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(string));

            var questionStatusParameter = questionStatus != null ?
                new ObjectParameter("QuestionStatus", questionStatus) :
                new ObjectParameter("QuestionStatus", typeof(string));

            var workSheet_DateFromParameter = workSheet_DateFrom.HasValue ?
                new ObjectParameter("WorkSheet_DateFrom", workSheet_DateFrom) :
                new ObjectParameter("WorkSheet_DateFrom", typeof(System.DateTime));

            var workSheet_DateToParameter = workSheet_DateTo.HasValue ?
                new ObjectParameter("WorkSheet_DateTo", workSheet_DateTo) :
                new ObjectParameter("WorkSheet_DateTo", typeof(System.DateTime));

            var workSheet_CloseDateFromParameter = workSheet_CloseDateFrom.HasValue ?
                new ObjectParameter("WorkSheet_CloseDateFrom", workSheet_CloseDateFrom) :
                new ObjectParameter("WorkSheet_CloseDateFrom", typeof(System.DateTime));

            var workSheet_CloseDateToParameter = workSheet_CloseDateTo.HasValue ?
                new ObjectParameter("WorkSheet_CloseDateTo", workSheet_CloseDateTo) :
                new ObjectParameter("WorkSheet_CloseDateTo", typeof(System.DateTime));

            var evaluate_MediaParameter = evaluate_Media.HasValue ?
                new ObjectParameter("Evaluate_Media", evaluate_Media) :
                new ObjectParameter("Evaluate_Media", typeof(int));

            var jobTypeParameter = jobType != null ?
                new ObjectParameter("JobType", jobType) :
                new ObjectParameter("JobType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_Get_TrackerByWorkSheet_Ques_Result>("HC_SP_Get_TrackerByWorkSheet_Ques", projectListParameter, unitCodeParameter, questionStatusParameter, workSheet_DateFromParameter, workSheet_DateToParameter, workSheet_CloseDateFromParameter, workSheet_CloseDateToParameter, evaluate_MediaParameter, jobTypeParameter);
        }

        public virtual ObjectResult<TK_SP_GET_REFERENCE_UNIT_OF_A_UNIT_Result> TK_SP_GET_REFERENCE_UNIT_OF_A_UNIT(Nullable<long> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TK_SP_GET_REFERENCE_UNIT_OF_A_UNIT_Result>("TK_SP_GET_REFERENCE_UNIT_OF_A_UNIT", unitIdParameter);
        }

        public virtual int HC_SP_CONFIG_UPDATE_TD_RECEIVE_ITEM_MODAL(Nullable<long> receive_Item_ID, Nullable<int> specL1_ID, Nullable<int> specL2_ID, Nullable<int> specL3_ID, Nullable<int> location_ID, Nullable<int> cause_ID, Nullable<bool> duplicateFixid, string user_Code)
        {
            var receive_Item_IDParameter = receive_Item_ID.HasValue ?
                new ObjectParameter("Receive_Item_ID", receive_Item_ID) :
                new ObjectParameter("Receive_Item_ID", typeof(long));

            var specL1_IDParameter = specL1_ID.HasValue ?
                new ObjectParameter("SpecL1_ID", specL1_ID) :
                new ObjectParameter("SpecL1_ID", typeof(int));

            var specL2_IDParameter = specL2_ID.HasValue ?
                new ObjectParameter("SpecL2_ID", specL2_ID) :
                new ObjectParameter("SpecL2_ID", typeof(int));

            var specL3_IDParameter = specL3_ID.HasValue ?
                new ObjectParameter("SpecL3_ID", specL3_ID) :
                new ObjectParameter("SpecL3_ID", typeof(int));

            var location_IDParameter = location_ID.HasValue ?
                new ObjectParameter("Location_ID", location_ID) :
                new ObjectParameter("Location_ID", typeof(int));

            var cause_IDParameter = cause_ID.HasValue ?
                new ObjectParameter("Cause_ID", cause_ID) :
                new ObjectParameter("Cause_ID", typeof(int));

            var duplicateFixidParameter = duplicateFixid.HasValue ?
                new ObjectParameter("DuplicateFixid", duplicateFixid) :
                new ObjectParameter("DuplicateFixid", typeof(bool));

            var user_CodeParameter = user_Code != null ?
                new ObjectParameter("User_Code", user_Code) :
                new ObjectParameter("User_Code", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_CONFIG_UPDATE_TD_RECEIVE_ITEM_MODAL", receive_Item_IDParameter, specL1_IDParameter, specL2_IDParameter, specL3_IDParameter, location_IDParameter, cause_IDParameter, duplicateFixidParameter, user_CodeParameter);
        }

        public virtual ObjectResult<HC_SP_GET_PERMISSION_Result> HC_SP_GET_PERMISSION(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_GET_PERMISSION_Result>("HC_SP_GET_PERMISSION", userIdParameter);
        }

        public virtual int HC_SP_API_UPDATE_CONFIG_CLOSE_WORKSHEET(Nullable<long> worksheetId, string remark, string userCode)
        {
            var worksheetIdParameter = worksheetId.HasValue ?
                new ObjectParameter("WorksheetId", worksheetId) :
                new ObjectParameter("WorksheetId", typeof(long));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_API_UPDATE_CONFIG_CLOSE_WORKSHEET", worksheetIdParameter, remarkParameter, userCodeParameter);
        }

        public virtual int HC_SP_CONFIG_UPDATE_REALDATE_TD_RECEIVE(Nullable<long> receive_ID, Nullable<System.DateTime> receive_Appointment_Date_real, string remark, string user_Code)
        {
            var receive_IDParameter = receive_ID.HasValue ?
                new ObjectParameter("Receive_ID", receive_ID) :
                new ObjectParameter("Receive_ID", typeof(long));

            var receive_Appointment_Date_realParameter = receive_Appointment_Date_real.HasValue ?
                new ObjectParameter("Receive_Appointment_Date_real", receive_Appointment_Date_real) :
                new ObjectParameter("Receive_Appointment_Date_real", typeof(System.DateTime));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var user_CodeParameter = user_Code != null ?
                new ObjectParameter("User_Code", user_Code) :
                new ObjectParameter("User_Code", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HC_SP_CONFIG_UPDATE_REALDATE_TD_RECEIVE", receive_IDParameter, receive_Appointment_Date_realParameter, remarkParameter, user_CodeParameter);
        }

        public virtual ObjectResult<HC_SP_API_GET_DOCUMENT_F3_Result> HC_SP_API_GET_DOCUMENT_F3(Nullable<long> projectID, Nullable<long> unitID, string unitAddress, Nullable<System.DateTime> transferDateFrom, Nullable<System.DateTime> transferDateTo, string unitIDList)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(long));

            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(long));

            var unitAddressParameter = unitAddress != null ?
                new ObjectParameter("UnitAddress", unitAddress) :
                new ObjectParameter("UnitAddress", typeof(string));

            var transferDateFromParameter = transferDateFrom.HasValue ?
                new ObjectParameter("TransferDateFrom", transferDateFrom) :
                new ObjectParameter("TransferDateFrom", typeof(System.DateTime));

            var transferDateToParameter = transferDateTo.HasValue ?
                new ObjectParameter("TransferDateTo", transferDateTo) :
                new ObjectParameter("TransferDateTo", typeof(System.DateTime));

            var unitIDListParameter = unitIDList != null ?
                new ObjectParameter("UnitIDList", unitIDList) :
                new ObjectParameter("UnitIDList", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HC_SP_API_GET_DOCUMENT_F3_Result>("HC_SP_API_GET_DOCUMENT_F3", projectIDParameter, unitIDParameter, unitAddressParameter, transferDateFromParameter, transferDateToParameter, unitIDListParameter);
        }

    }
}
